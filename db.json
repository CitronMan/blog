{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/markdown_pic.jpg","path":"images/markdown_pic.jpg","modified":1,"renderable":0},{"_id":"source/images/wechat_pay.jpg","path":"images/wechat_pay.jpg","modified":1,"renderable":0},{"_id":"source/images/alipay.jpg","path":"images/alipay.jpg","modified":1,"renderable":0},{"_id":"source/images/markdown_cover.jpg","path":"images/markdown_cover.jpg","modified":1,"renderable":0},{"_id":"source/images/BrainMatrix/BrainMatrix.jpg","path":"images/BrainMatrix/BrainMatrix.jpg","modified":1,"renderable":0},{"_id":"source/images/BrainMatrix/architecture_2.jpg","path":"images/BrainMatrix/architecture_2.jpg","modified":1,"renderable":0},{"_id":"source/images/gpu-config/cuda-shell.jpg","path":"images/gpu-config/cuda-shell.jpg","modified":1,"renderable":0},{"_id":"source/images/gpu-config/environment.png","path":"images/gpu-config/environment.png","modified":1,"renderable":0},{"_id":"source/images/gpu-config/sxnet.jpg","path":"images/gpu-config/sxnet.jpg","modified":1,"renderable":0},{"_id":"source/images/meicon.jpg","path":"images/meicon.jpg","modified":1,"renderable":0},{"_id":"themes/fexo1/source/css/personal.css","path":"css/personal.css","modified":1,"renderable":1},{"_id":"themes/fexo1/source/css/styles.css","path":"css/styles.css","modified":1,"renderable":1},{"_id":"themes/fexo1/source/fonts/PoiretOne-Regular.eot","path":"fonts/PoiretOne-Regular.eot","modified":1,"renderable":1},{"_id":"themes/fexo1/source/fonts/PoiretOne-Regular.woff","path":"fonts/PoiretOne-Regular.woff","modified":1,"renderable":1},{"_id":"themes/fexo1/source/fonts/calligraffitti-regular-webfont.eot","path":"fonts/calligraffitti-regular-webfont.eot","modified":1,"renderable":1},{"_id":"themes/fexo1/source/fonts/calligraffitti-regular-webfont.woff","path":"fonts/calligraffitti-regular-webfont.woff","modified":1,"renderable":1},{"_id":"themes/fexo1/source/fonts/calligraffitti-regular-webfont.woff2","path":"fonts/calligraffitti-regular-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/fexo1/source/fonts/fontello.eot","path":"fonts/fontello.eot","modified":1,"renderable":1},{"_id":"themes/fexo1/source/fonts/PoiretOne-Regular.ttf","path":"fonts/PoiretOne-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/fexo1/source/fonts/fontello.svg","path":"fonts/fontello.svg","modified":1,"renderable":1},{"_id":"themes/fexo1/source/fonts/fontello.ttf","path":"fonts/fontello.ttf","modified":1,"renderable":1},{"_id":"themes/fexo1/source/fonts/fontello.woff","path":"fonts/fontello.woff","modified":1,"renderable":1},{"_id":"themes/fexo1/source/fonts/fontello.woff2","path":"fonts/fontello.woff2","modified":1,"renderable":1},{"_id":"themes/fexo1/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/fexo1/source/js/app.js","path":"js/app.js","modified":1,"renderable":1},{"_id":"themes/fexo1/source/js/bundle.js","path":"js/bundle.js","modified":1,"renderable":1},{"_id":"themes/fexo1/source/js/fastclick.js","path":"js/fastclick.js","modified":1,"renderable":1},{"_id":"themes/fexo1/source/js/scroll-spy.js","path":"js/scroll-spy.js","modified":1,"renderable":1},{"_id":"themes/fexo1/source/js/util.js","path":"js/util.js","modified":1,"renderable":1},{"_id":"themes/fexo1/source/js/zenscroll.js","path":"js/zenscroll.js","modified":1,"renderable":1},{"_id":"themes/fexo1/source/sass/styles.scss","path":"sass/styles.scss","modified":1,"renderable":1},{"_id":"source/images/zhizhuwang.jpg","path":"images/zhizhuwang.jpg","modified":1,"renderable":0},{"_id":"themes/fexo1/source/css/styles.css.map","path":"css/styles.css.map","modified":1,"renderable":1},{"_id":"themes/fexo1/source/fonts/calligraffitti-regular-webfont.ttf","path":"fonts/calligraffitti-regular-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/fexo1/source/fonts/calligraffitti-regular-webfont.svg","path":"fonts/calligraffitti-regular-webfont.svg","modified":1,"renderable":1},{"_id":"themes/fexo1/source/fonts/PoiretOne-Regular.svg","path":"fonts/PoiretOne-Regular.svg","modified":1,"renderable":1},{"_id":"themes/fexo1/source/images/favicon.jpg","path":"images/favicon.jpg","modified":1,"renderable":1},{"_id":"themes/fexo1/source/images/me.jpg","path":"images/me.jpg","modified":1,"renderable":1},{"_id":"themes/fexo1/source/images/meddd.jpg","path":"images/meddd.jpg","modified":1,"renderable":1},{"_id":"source/images/bg.jpg","path":"images/bg.jpg","modified":1,"renderable":0},{"_id":"themes/fexo1/source/fonts/Lobster-Regular.eot","path":"fonts/Lobster-Regular.eot","modified":1,"renderable":1},{"_id":"themes/fexo1/source/fonts/Lobster-Regular.woff","path":"fonts/Lobster-Regular.woff","modified":1,"renderable":1},{"_id":"themes/fexo1/source/fonts/Lobster-Regular.ttf","path":"fonts/Lobster-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/fexo1/source/images/bg.jpg","path":"images/bg.jpg","modified":1,"renderable":1},{"_id":"themes/fexo1/source/fonts/Lobster-Regular.svg","path":"fonts/Lobster-Regular.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/fexo1/.csscomb.json","hash":"0bff596879c2556634b9a92abe5b1606dc77fd1c","modified":1472399057929},{"_id":"themes/fexo1/.gitignoretemp","hash":"32223fbe296f8e3026c689bad8f3dea9d0fcbb43","modified":1472399057929},{"_id":"themes/fexo1/LICENSE","hash":"db4cb5aef6072a96721b5428fdd999647c049d55","modified":1472399057941},{"_id":"themes/fexo1/README.md","hash":"35cd346c229e17ed83609ee94b5d6493c4ab9982","modified":1472399057941},{"_id":"themes/fexo1/_config.yml","hash":"38538d18e7b71e8b23504db175ed2df6a86e7231","modified":1472399057941},{"_id":"themes/fexo1/_config.yml~","hash":"38538d18e7b71e8b23504db175ed2df6a86e7231","modified":1472399057941},{"_id":"themes/fexo1/gulpfile.js","hash":"5995b9c4e8e18d1670ad30b2881d49fa17e56415","modified":1472399057941},{"_id":"themes/fexo1/package.json","hash":"351b5b21f5ea8851103ee1891248be43f3c27027","modified":1472399057941},{"_id":"source/_posts/BranMatrix Brief.md","hash":"69e980fb52b7d2bc690d1a72484e4e911e0360c2","modified":1472399057925},{"_id":"source/_posts/BranMatrix Brief.md~","hash":"69e980fb52b7d2bc690d1a72484e4e911e0360c2","modified":1472399057925},{"_id":"source/_posts/Crawler Tutorial1.0.md","hash":"757ee86bd0a32366d556620aab85f02768d35099","modified":1472399057925},{"_id":"source/_posts/Crawler Tutorial1.0.md~","hash":"7b836dacf03fa488fda4492a19e145ade8987825","modified":1472399057925},{"_id":"source/_posts/GPU-Config.md","hash":"47d8424cf62202d7dd428e26f1a97f018c128b30","modified":1472399057925},{"_id":"source/_posts/GPU-Config.md~","hash":"47d8424cf62202d7dd428e26f1a97f018c128b30","modified":1472399057925},{"_id":"source/_posts/Git-Tutorial.md","hash":"a24825d22324a8d5965b3549af1487b3c74b17da","modified":1472439630329},{"_id":"source/_posts/Git-Tutorial.md~","hash":"be99d8d034752a32883ab7df20c4ced1832314cf","modified":1472439626313},{"_id":"source/_posts/Github+Hexo Tutorial.md","hash":"08edc759811420a9321bca3623770d451e204bad","modified":1472441571121},{"_id":"source/_posts/Github+Hexo Tutorial.md~","hash":"3e2f388ff899ec49dfe0b933152a822804f2fb21","modified":1472441569921},{"_id":"source/_posts/Schedule.md","hash":"0f86d33c32215ee60e336385188054fbabd71b49","modified":1472399057925},{"_id":"source/_posts/Schedule.md~","hash":"51908820584fd8411dea7d7386b9ad87b2105669","modified":1472399057925},{"_id":"source/_posts/Ubuntu-Shell.md","hash":"8e5f253434cca8d1bd8070f6db4f137cea5c1aaa","modified":1472438144517},{"_id":"source/_posts/Ubuntu-Shell.md~","hash":"b6bd063655d834dfdb5b54189151c3c964d36946","modified":1472399057925},{"_id":"source/about/index.md","hash":"3f710c41b633d2f7cc1292c08f92a3d227b712ab","modified":1472399057925},{"_id":"source/about/index.md~","hash":"3f710c41b633d2f7cc1292c08f92a3d227b712ab","modified":1472399057925},{"_id":"source/css/personal-style.css","hash":"bdb70627791352604a39b54921dfc7c4e3ff3ccb","modified":1472399057925},{"_id":"source/images/markdown_pic.jpg","hash":"fbd03d9424aa262d091ff9a4a69873fd124bbf78","modified":1472399057929},{"_id":"source/images/wechat_pay.jpg","hash":"04c45d88bd805001bf9bf4d41cb8e15280e6b237","modified":1472399057929},{"_id":"source/link/index.md","hash":"357e194d549590b0ff8dcf404137578b10530196","modified":1472399057929},{"_id":"source/link/index.md~","hash":"c975b4a0b51a08b8c6babc4cf05342493870c58c","modified":1472399057929},{"_id":"source/project/index.md","hash":"b8f11f026c92243f32d2dc3265fba426b8738c0c","modified":1472399057929},{"_id":"source/project/index.md~","hash":"0f1556916d73141b260d307aa3b2f778778103a9","modified":1472399057929},{"_id":"source/tag/index.md","hash":"34c7b76f347ad9f82a1b085bc6691d24c8fb126b","modified":1472399057929},{"_id":"source/tag/index.md~","hash":"d397ecc86eb9a5e18ddf0a816c6ecee815b68894","modified":1472399057929},{"_id":"themes/fexo1/.gittemp/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1472399057929},{"_id":"themes/fexo1/.gittemp/config","hash":"3af40fb3b84d66867eb552c668f51fb5cc6d7634","modified":1472399057929},{"_id":"themes/fexo1/.gittemp/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1472399057929},{"_id":"themes/fexo1/.gittemp/index","hash":"a5213028ff369775a2af57e5f20f1953a965cbd3","modified":1472399057933},{"_id":"themes/fexo1/.gittemp/packed-refs","hash":"50a5a160f3cd002d71caa85b49aaf6fb17c68a11","modified":1472399057941},{"_id":"themes/fexo1/languages/default.yml","hash":"fd7397be7789b43c1c163ab4faf106318811c2a8","modified":1472399057941},{"_id":"themes/fexo1/languages/no.yml","hash":"bf11017d77f64fbafb9c99ac219d076b20d53afc","modified":1472399057941},{"_id":"themes/fexo1/languages/zh-CN.yml","hash":"751c74830d5609969f1fd6e7fa933ecd5756117a","modified":1472399057941},{"_id":"themes/fexo1/languages/zh-TW.yml","hash":"6141b4c7a094c74bd9df7c08908d92b561c1a0c0","modified":1472399057941},{"_id":"themes/fexo1/layout/about.ejs","hash":"e8815233896c044cee92bfc16d20c4b9f5a00922","modified":1472399057941},{"_id":"themes/fexo1/layout/archive.ejs","hash":"f70a311fedda4468135aa5914954e9ecd0280a1d","modified":1472399057941},{"_id":"themes/fexo1/layout/category.ejs","hash":"b8c2c9baf4e21e4472b25a717ba61a5457ccddff","modified":1472399057941},{"_id":"themes/fexo1/layout/index.ejs","hash":"9d33cd03e7a8adf8bbc124c248def36c15e681d0","modified":1472399057941},{"_id":"themes/fexo1/layout/layout.ejs","hash":"ae485be0f6c0c431245e0cac21dc109c9d0125e8","modified":1472399057941},{"_id":"themes/fexo1/layout/link.ejs","hash":"d2659cb6f1f796111a9261a90ccfe209294a0114","modified":1472399057941},{"_id":"themes/fexo1/layout/post.ejs","hash":"075586a9805c24683a154a19e8df9a7e9eab7bcd","modified":1472399057941},{"_id":"themes/fexo1/layout/project.ejs","hash":"ce72621428276d54c15de0a4057144fc164ae5c1","modified":1472399057941},{"_id":"themes/fexo1/layout/search.ejs","hash":"1b1f99b55721d9178d712d4d3c4928322ba3c649","modified":1472399057941},{"_id":"themes/fexo1/layout/tag.ejs","hash":"03aaee19788f09dbb153b108a54aa4899aacd133","modified":1472399057941},{"_id":"source/images/alipay.jpg","hash":"6b07a212443d18d7f170d59217ebcd844937aa85","modified":1472399057929},{"_id":"source/images/markdown_cover.jpg","hash":"73b87af92b5d87c3025f954b649fef08bdd36c8e","modified":1472399057929},{"_id":"source/images/BrainMatrix/BrainMatrix.jpg","hash":"d6e8eeb9e971ac59ec713218502d4c43dbdc31a4","modified":1472399057925},{"_id":"source/images/BrainMatrix/architecture_2.jpg","hash":"ee4986a56bd29dac6ad68be8a4bb78e7949ef9ec","modified":1472399057925},{"_id":"source/images/gpu-config/cuda-shell.jpg","hash":"089b2468bbaafac553295a1fb19b40619ac76adf","modified":1472399057929},{"_id":"source/images/gpu-config/environment.png","hash":"3097f80db8e68f3e83f4a64a2b049017285a4ac3","modified":1472399057929},{"_id":"source/images/gpu-config/sxnet.jpg","hash":"9bbbdd94b313d883a79e61e3d72a7a6cded80f77","modified":1472399057929},{"_id":"source/images/meicon.jpg","hash":"e8f1b9c119536477a0c2334c955e5a08da382fc3","modified":1472399057929},{"_id":"themes/fexo1/.gittemp/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1472399057929},{"_id":"themes/fexo1/.gittemp/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1472399057933},{"_id":"themes/fexo1/.gittemp/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1472399057933},{"_id":"themes/fexo1/.gittemp/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1472399057933},{"_id":"themes/fexo1/.gittemp/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1472399057933},{"_id":"themes/fexo1/.gittemp/hooks/pre-push.sample","hash":"b4ad74c989616b7395dc6c9fce9871bb1e86dfb5","modified":1472399057933},{"_id":"themes/fexo1/.gittemp/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1472399057933},{"_id":"themes/fexo1/.gittemp/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1472399057933},{"_id":"themes/fexo1/.gittemp/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1472399057933},{"_id":"themes/fexo1/.gittemp/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1472399057933},{"_id":"themes/fexo1/.gittemp/logs/HEAD","hash":"8c93fe5417b27c0b3d346a5d546cf7a63a8d5f8f","modified":1472399057933},{"_id":"themes/fexo1/layout/_partial/article.ejs","hash":"c56f02b3344586f984e742732323b809a941282a","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/baidu-analytics.ejs","hash":"c19e4abec19c23840fff7f8a51f4aefbb2b7e8ca","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/duoshuo.ejs","hash":"728522a31887d5cc896104cc1b4c48b9d2659350","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/head.ejs","hash":"aaee7fc7a120e9a45e91e95595dde85d770baf84","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/home.ejs","hash":"988b6b024125852eceac94df278cdeaa662c9d3d","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/load-script.ejs","hash":"4675c917548817118f4a3c5d84acc98d6c61a1d8","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/style.ejs","hash":"99c20c0ae1a6876899614b029ce39864bf86f877","modified":1472399057941},{"_id":"themes/fexo1/source/css/.styles.css.swp","hash":"83a1ed1a91b1a5a4003d50e5f98ea91e1f41bfe3","modified":1472399057941},{"_id":"themes/fexo1/source/css/personal.css","hash":"48fd3bcc3fa8c15620523815f79db21ec60f7d3e","modified":1472399057941},{"_id":"themes/fexo1/source/css/personal.css~","hash":"3b4727212f15f4d641e24f47c72661fe811a8e16","modified":1472399057941},{"_id":"themes/fexo1/source/css/styles.css","hash":"975f1b389868464f9a99b7fa34827b42e20355e2","modified":1472399057941},{"_id":"themes/fexo1/source/css/styles.css~","hash":"16d38b0daefafdd30410d18889162940f149bdde","modified":1472399057941},{"_id":"themes/fexo1/source/fonts/PoiretOne-Regular.eot","hash":"2a4ef0d00fb77d16e37c3da429698b029e7d2d2f","modified":1472399057953},{"_id":"themes/fexo1/source/fonts/PoiretOne-Regular.woff","hash":"1cebcedde2c52261591bc322b176638798336a24","modified":1472399057953},{"_id":"themes/fexo1/source/fonts/calligraffitti-regular-webfont.eot","hash":"4c7bcece73621f648fa71d58fa13c28670fed8ca","modified":1472399057953},{"_id":"themes/fexo1/source/fonts/calligraffitti-regular-webfont.woff","hash":"1364845a3815740c572e29c83fd8d54f1c1ef5de","modified":1472399057953},{"_id":"themes/fexo1/source/fonts/calligraffitti-regular-webfont.woff2","hash":"ba50c427166090361b0dab4c72136c7b451e86d4","modified":1472399057953},{"_id":"themes/fexo1/source/fonts/fontello.eot","hash":"7732065eeaec4614e9548955d9bd30ccd7b149c1","modified":1472399057953},{"_id":"themes/fexo1/source/fonts/PoiretOne-Regular.ttf","hash":"2b186ce205301f7f3abd441f0372b72adcd2aee3","modified":1472399057953},{"_id":"themes/fexo1/source/fonts/fontello.svg","hash":"33a984f4482a5ba5e7bc67d82e8db63cda4e3ae1","modified":1472399057957},{"_id":"themes/fexo1/source/fonts/fontello.ttf","hash":"e255d37ca14348e9a8532667a757ab552e58caff","modified":1472399057957},{"_id":"themes/fexo1/source/fonts/fontello.woff","hash":"45737fea847f3942ef405f00ea4df940fbb6bbd9","modified":1472399057957},{"_id":"themes/fexo1/source/fonts/fontello.woff2","hash":"1dfbc23328582f7cd9bcbe538224f6c762023e43","modified":1472399057957},{"_id":"themes/fexo1/source/images/avatar.jpg","hash":"06b315b1cde634d2313044a83c40b1ac10961134","modified":1472399057957},{"_id":"themes/fexo1/source/js/app.js","hash":"a6d6e7fba3d69d0dec2c4d18debe0dc4cc7ab319","modified":1472399057957},{"_id":"themes/fexo1/source/js/bundle.js","hash":"7da160b15a43ce19273ec85204828bd42628546f","modified":1472399057961},{"_id":"themes/fexo1/source/js/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1472399057961},{"_id":"themes/fexo1/source/js/scroll-spy.js","hash":"81b81362fcd63592045a673b54ce1edb7a6e3028","modified":1472399057961},{"_id":"themes/fexo1/source/js/util.js","hash":"8136da2bec1faf5fe3e14fa436f501292fca8c07","modified":1472399057961},{"_id":"themes/fexo1/source/js/zenscroll.js","hash":"bea2a3571555fdae64e8fc56f161f9a4f427b335","modified":1472399057961},{"_id":"themes/fexo1/source/sass/_animate.scss","hash":"8de97c948cb4b9c9b7a87c0f7332ed534c378e26","modified":1472399057961},{"_id":"themes/fexo1/source/sass/_base.scss","hash":"915bc919ae434a61b58511720300eca8646b6705","modified":1472399057961},{"_id":"themes/fexo1/source/sass/_common.scss","hash":"b1fc97d6d24a92a9a7a9d39be4fe844f5c0f6d44","modified":1472399057961},{"_id":"themes/fexo1/source/sass/_fontello.scss","hash":"f2d6b86bb63459884cf63e8c045fd10c827396eb","modified":1472399057961},{"_id":"themes/fexo1/source/sass/_fonts.scss","hash":"10e188d379782ae2ee10427544919557036d0137","modified":1472399057961},{"_id":"themes/fexo1/source/sass/_highlight-js.scss","hash":"38a5c4d9f3a2943aff9bde1d624d710587e3bc05","modified":1472399057961},{"_id":"themes/fexo1/source/sass/_normalize.scss","hash":"e58275a588bb631a37a2988145eea231ed23176b","modified":1472399057961},{"_id":"themes/fexo1/source/sass/_type.scss","hash":"cc7a25654593030f5214d5adf85f12a954c373c5","modified":1472399057961},{"_id":"themes/fexo1/source/sass/_variable.scss","hash":"e403294d093f6b5294938619786a22fde3e7f848","modified":1472399057961},{"_id":"themes/fexo1/source/sass/styles.scss","hash":"86ebe05d6a2931dd6fceef1e50c31ca996dc20be","modified":1472399057961},{"_id":"source/images/zhizhuwang.jpg","hash":"a0abe5f5fb2ff31d7f6d055244dbd6368164f5e7","modified":1472399057929},{"_id":"themes/fexo1/source/css/styles.css.map","hash":"61bc0709283224840518b3f864b8552ebf245b9f","modified":1472399057941},{"_id":"themes/fexo1/source/fonts/calligraffitti-regular-webfont.ttf","hash":"4688935c427ae40dcbf16523bc11d9fc10e359b5","modified":1472399057953},{"_id":"themes/fexo1/source/sass/pages/_tag.scss","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1472399057961},{"_id":"themes/fexo1/.gittemp/objects/pack/pack-27292851007c7fae7f2faae02dbbf17d42d246c0.idx","hash":"2e2f6962d4beb20a54f23b8d36d8eed79bce9fff","modified":1472399057933},{"_id":"themes/fexo1/.gittemp/refs/heads/master","hash":"34e4a539dc66e7f354fa80a79331d032652e8189","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/back-top.ejs","hash":"47f2b8306b901f0fffc6aa0cfa40db697a0c5aff","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/category-box.ejs","hash":"497bb978e6bc81a79cd2dc80fa355d57335f0b81","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/category.ejs","hash":"2429158ff177b8876de765498b54d0c91b3fc551","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/comments.ejs","hash":"49d044fc7bff2c6a249842b36c3739f01333109e","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/date.ejs","hash":"163fbd874481cb9e2b6da5282701a3fbaa4e367a","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/disqus.ejs","hash":"21de7498d235a52337335108fce7446e1a21ea1c","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/donation.ejs","hash":"65bf93ad8e149033e6f93d673cc85ee223615589","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/duoshuo.ejs","hash":"a876cf39335d5ad935f01c31e87828b5115d0064","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/item-category-name.ejs","hash":"8ab52c9b5d5db1d3c1d343ecb405c4e15cd144ac","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/item-post.ejs","hash":"722e5dbde2d4683eea08f2af922358db45b253b1","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/item-tag.ejs","hash":"1b4c4e090c33ccfd44b531a5de9af16eec266512","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/item-year.ejs","hash":"906a6aea44a30e83c4c4e449294c7e4d831c188e","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/modal.ejs","hash":"022291a0a5c872260b67b01a4aaa5de94978298c","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/page-header.ejs","hash":"14bad32082d87d7eeb45c0e9079e72f0ae65dbf4","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/pagination.ejs","hash":"ffbb548aee6e15cae924ee7f922f28b2403e8e45","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/tag-box.ejs","hash":"33467eb5c760502eb75dcad63a4527a1f68deb95","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/tag-list.ejs","hash":"8535c40b573744ced738b051383c0feca80eb0e9","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/title.ejs","hash":"6ab4c0769db4507d7fe1ffee1e69f988309309ff","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/toc.ejs","hash":"0efd5e3294bb883ff96270e69b05e289e4f17efe","modified":1472399057941},{"_id":"themes/fexo1/layout/_partial/component/toolbox.ejs","hash":"5a3a06aec68cc44df2e62bd66475dbf860792c30","modified":1472399057941},{"_id":"themes/fexo1/source/fonts/calligraffitti-regular-webfont.svg","hash":"76e1e4cee6f2b5d596c635631938ee5eb6ab3e67","modified":1472399057953},{"_id":"themes/fexo1/source/fonts/PoiretOne-Regular.svg","hash":"e21109783f218cb7849b12e867e0b775ce3fadda","modified":1472399057953},{"_id":"themes/fexo1/source/images/favicon.jpg","hash":"5f0e22bdf8ad0015caa6759f32963b6586b81fdc","modified":1472399057957},{"_id":"themes/fexo1/source/images/me.jpg","hash":"e8f1b9c119536477a0c2334c955e5a08da382fc3","modified":1472399057957},{"_id":"themes/fexo1/source/sass/component/_back-top.scss","hash":"1c67da7007f4b9d8c65deea3d82c0f579e65f2c2","modified":1472399057961},{"_id":"themes/fexo1/source/sass/component/_category-box.scss","hash":"a807145b74d1b98270ea19ae35edd25b4c448bfa","modified":1472399057961},{"_id":"themes/fexo1/source/sass/component/_comments.scss","hash":"3e9b61bc08f38f947f54e942986a19a7f95ce723","modified":1472399057961},{"_id":"themes/fexo1/source/sass/component/_donation.scss","hash":"dd8fb354d6196bf751978ae2215b8f0757c10ed5","modified":1472399057961},{"_id":"themes/fexo1/source/sass/component/_hint.scss","hash":"2812b4e10313168f2e082b740c60d64a151d94c8","modified":1472399057961},{"_id":"themes/fexo1/source/sass/component/_index.scss","hash":"dc7d816cc77cb46580828e9ded2cfa45ba454226","modified":1472399057961},{"_id":"themes/fexo1/source/sass/component/_item-category-name.scss","hash":"119840d160cd263b57e79e2099a81079d7eeee3d","modified":1472399057961},{"_id":"themes/fexo1/source/sass/component/_item-post.scss","hash":"1fb2e9be2d2edbb538cfbce7c80d5847f88e2f05","modified":1472399057961},{"_id":"themes/fexo1/source/sass/component/_item-title.scss","hash":"cdaca2858abc9428ef01103a7fbea8f095d856aa","modified":1472399057961},{"_id":"themes/fexo1/source/sass/component/_item-year.scss","hash":"12c147dd4ab9587cd622083c86c2f6cf07d8e26a","modified":1472399057961},{"_id":"themes/fexo1/source/sass/component/_list-post.scss","hash":"43564f6443385bf34e15672d1477d1c7560f5563","modified":1472399057961},{"_id":"themes/fexo1/source/sass/component/_modal.scss","hash":"2f0ed96df388ec28445b1ce5c6a61a0a697f9a68","modified":1472399057961},{"_id":"themes/fexo1/source/sass/component/_page-header.scss","hash":"893d0595ef48323dce449ef0d17308ce02b36087","modified":1472399057961},{"_id":"themes/fexo1/source/sass/component/_pagination.scss","hash":"12c1880c518aee2e3ccf59661d01c308639f8a9e","modified":1472399057961},{"_id":"themes/fexo1/source/sass/component/_table.scss","hash":"4899fb31d1be8d5c9c397fcbcfc2ff0c5b2e7f7f","modified":1472399057961},{"_id":"themes/fexo1/source/sass/component/_tag-box.scss","hash":"7601951d09a75a7c39493bfa1b1da5ac989d9cda","modified":1472399057961},{"_id":"themes/fexo1/source/sass/component/_toc.scss","hash":"3b4c083cb2ba4a88ca35b6d8259ee991c83b3406","modified":1472399057961},{"_id":"themes/fexo1/source/sass/component/_toolbox-mobile.scss","hash":"f15b215b9bb103ee1773a01d8badd81bb7643710","modified":1472399057961},{"_id":"themes/fexo1/source/sass/component/_toolbox.scss","hash":"964a480d4e7fad100463195cde2a3f67f9765c23","modified":1472399057961},{"_id":"themes/fexo1/source/sass/pages/_about.scss","hash":"7d61e627ea5376390081e0b93db426ffc6c4dee8","modified":1472399057961},{"_id":"themes/fexo1/source/sass/pages/_archive.scss","hash":"fefd54282a42ebb68b711f1cfefa1f67abbde05b","modified":1472399057961},{"_id":"themes/fexo1/source/sass/pages/_category.scss","hash":"713242d10c0c8687c9e2f287f1beeb38de6cdbad","modified":1472399057961},{"_id":"themes/fexo1/source/sass/pages/_home.scss","hash":"b65bb069ed28fbf223c5bb7e760882f79d20fa46","modified":1472399057961},{"_id":"themes/fexo1/source/sass/pages/_index.scss","hash":"d9fe73a87585abad06a7dd77b67ec7ce6c24402c","modified":1472399057961},{"_id":"themes/fexo1/source/sass/pages/_link.scss","hash":"d3a249423c7ee88d1cb3a12e03f6c42a0a4d45a1","modified":1472399057961},{"_id":"themes/fexo1/source/sass/pages/_post.scss","hash":"c6f694568af362f9fe1e7e2b9909e47303178116","modified":1472399057961},{"_id":"themes/fexo1/source/sass/pages/_project.scss","hash":"bcbaded3d378bbaa1497f4c3843994ea589f3149","modified":1472399057961},{"_id":"themes/fexo1/source/sass/pages/_search.scss","hash":"fd28f01829628c9d21f9391d5067ddcd836dad13","modified":1472399057961},{"_id":"themes/fexo1/source/images/meddd.jpg","hash":"f0ae9eeb5ca26cf8b6707bd77185e6c30fd9e515","modified":1472399057957},{"_id":"themes/fexo1/.gittemp/logs/refs/heads/master","hash":"8c93fe5417b27c0b3d346a5d546cf7a63a8d5f8f","modified":1472399057933},{"_id":"themes/fexo1/.gittemp/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1472399057941},{"_id":"source/images/bg.jpg","hash":"9477968db33a89a535ed185c0443cb3a89571adc","modified":1472399057929},{"_id":"themes/fexo1/.gittemp/logs/refs/remotes/origin/HEAD","hash":"8c93fe5417b27c0b3d346a5d546cf7a63a8d5f8f","modified":1472399057933},{"_id":"themes/fexo1/source/fonts/Lobster-Regular.eot","hash":"4f0c85f63beb0d95610317e16f1d4acdd2962eee","modified":1472399057945},{"_id":"themes/fexo1/source/fonts/Lobster-Regular.woff","hash":"298b80b1c9f694e1a055d62a5d809863c89baf50","modified":1472399057953},{"_id":"themes/fexo1/source/fonts/Lobster-Regular.ttf","hash":"50a84291b7012bfdcf9ff5116d6c7aa3f257f37f","modified":1472399057949},{"_id":"themes/fexo1/source/images/bg.jpg","hash":"9477968db33a89a535ed185c0443cb3a89571adc","modified":1472399057957},{"_id":"themes/fexo1/source/fonts/Lobster-Regular.svg","hash":"be1cab622c673942fb4d11a23c012227938b4792","modified":1472399057945},{"_id":"themes/fexo1/.gittemp/objects/pack/pack-27292851007c7fae7f2faae02dbbf17d42d246c0.pack","hash":"df5d31d0b59559a479fe25019a4fd7db025dbe9b","modified":1472399057937},{"_id":"public/css/personal-style.css","hash":"bdb70627791352604a39b54921dfc7c4e3ff3ccb","modified":1472442300671},{"_id":"public/about/index.html","hash":"28f1955c5f5fd48b93cd427510604d252d376970","modified":1472442301031},{"_id":"public/link/index.html","hash":"02891aff17e5269371291a3e61f923eff04d7fe3","modified":1472442301031},{"_id":"public/tag/index.html","hash":"3cfd847821fd50dfb04ad23f170ed100309a3f8f","modified":1472442301031},{"_id":"public/project/index.html","hash":"88f8ab2f1e8d5a7fd0aaf52fe05bf36962440707","modified":1472442301031},{"_id":"public/2016/08/29/Git-Tutorial/index.html","hash":"cc29b507afab3c1095420353c5bbbe299b04a784","modified":1472442301032},{"_id":"public/2016/08/27/Schedule/index.html","hash":"ddfd2674605bccfab8d88d87a2cf0f3c8503c688","modified":1472442301032},{"_id":"public/2016/08/22/Ubuntu-Shell/index.html","hash":"21dcd9e8d16b1feda24fd4318049ec910725f2c3","modified":1472442301032},{"_id":"public/2016/08/21/BranMatrix Brief/index.html","hash":"fe6b66a86680a93d5fc782fe00571c52bec00477","modified":1472442301032},{"_id":"public/2016/08/21/GPU-Config/index.html","hash":"cf3e5f2b4ff2dc2428dcabd56a598ea3b08c8804","modified":1472442301033},{"_id":"public/archives/index.html","hash":"26a38e2e1e651e1b8ff19592a607e35652f29f7d","modified":1472442301033},{"_id":"public/archives/2016/index.html","hash":"f96ad76e4cf70bf31222bae28f51b89b4bd4397d","modified":1472442301033},{"_id":"public/archives/2016/07/index.html","hash":"5fcf212ea8220e921cbfb9656ffcefa1cc4dcccd","modified":1472442301033},{"_id":"public/archives/2016/08/index.html","hash":"c929b1d804ce8ca3e5f14a287a9f72a67ab607a5","modified":1472442301033},{"_id":"public/index.html","hash":"08873ed5d138490009c71b57a97e26019aefab36","modified":1472442301033},{"_id":"public/tags/work/index.html","hash":"e13d6f8dd51c54bcd4db63ef75cf4b63d818f193","modified":1472442301033},{"_id":"public/tags/life/index.html","hash":"e9c399d2ed4122e2cb5eb158e45839b2ef08c404","modified":1472442301033},{"_id":"public/2016/08/20/Crawler Tutorial1.0/index.html","hash":"3364ed011042f0db2bb620dd3a7a20635a6c88af","modified":1472442301033},{"_id":"public/2016/07/21/Github+Hexo Tutorial/index.html","hash":"f0db99348303c5539b395d46abace8c8a9cbe2c3","modified":1472442301033},{"_id":"public/images/markdown_pic.jpg","hash":"fbd03d9424aa262d091ff9a4a69873fd124bbf78","modified":1472442301046},{"_id":"public/images/wechat_pay.jpg","hash":"04c45d88bd805001bf9bf4d41cb8e15280e6b237","modified":1472442301046},{"_id":"public/images/BrainMatrix/BrainMatrix.jpg","hash":"d6e8eeb9e971ac59ec713218502d4c43dbdc31a4","modified":1472442301047},{"_id":"public/images/gpu-config/cuda-shell.jpg","hash":"089b2468bbaafac553295a1fb19b40619ac76adf","modified":1472442301048},{"_id":"public/images/BrainMatrix/architecture_2.jpg","hash":"ee4986a56bd29dac6ad68be8a4bb78e7949ef9ec","modified":1472442301049},{"_id":"public/images/gpu-config/environment.png","hash":"3097f80db8e68f3e83f4a64a2b049017285a4ac3","modified":1472442301049},{"_id":"public/images/gpu-config/sxnet.jpg","hash":"9bbbdd94b313d883a79e61e3d72a7a6cded80f77","modified":1472442301049},{"_id":"public/fonts/PoiretOne-Regular.eot","hash":"2a4ef0d00fb77d16e37c3da429698b029e7d2d2f","modified":1472442301049},{"_id":"public/fonts/PoiretOne-Regular.woff","hash":"1cebcedde2c52261591bc322b176638798336a24","modified":1472442301049},{"_id":"public/fonts/calligraffitti-regular-webfont.eot","hash":"4c7bcece73621f648fa71d58fa13c28670fed8ca","modified":1472442301049},{"_id":"public/fonts/calligraffitti-regular-webfont.woff","hash":"1364845a3815740c572e29c83fd8d54f1c1ef5de","modified":1472442301049},{"_id":"public/fonts/calligraffitti-regular-webfont.woff2","hash":"ba50c427166090361b0dab4c72136c7b451e86d4","modified":1472442301049},{"_id":"public/fonts/fontello.eot","hash":"7732065eeaec4614e9548955d9bd30ccd7b149c1","modified":1472442301049},{"_id":"public/fonts/PoiretOne-Regular.ttf","hash":"2b186ce205301f7f3abd441f0372b72adcd2aee3","modified":1472442301049},{"_id":"public/fonts/fontello.svg","hash":"33a984f4482a5ba5e7bc67d82e8db63cda4e3ae1","modified":1472442301049},{"_id":"public/fonts/fontello.ttf","hash":"e255d37ca14348e9a8532667a757ab552e58caff","modified":1472442301049},{"_id":"public/fonts/fontello.woff","hash":"45737fea847f3942ef405f00ea4df940fbb6bbd9","modified":1472442301049},{"_id":"public/fonts/fontello.woff2","hash":"1dfbc23328582f7cd9bcbe538224f6c762023e43","modified":1472442301049},{"_id":"public/images/avatar.jpg","hash":"06b315b1cde634d2313044a83c40b1ac10961134","modified":1472442301050},{"_id":"public/sass/styles.scss","hash":"86ebe05d6a2931dd6fceef1e50c31ca996dc20be","modified":1472442301050},{"_id":"public/images/alipay.jpg","hash":"6b07a212443d18d7f170d59217ebcd844937aa85","modified":1472442301055},{"_id":"public/images/markdown_cover.jpg","hash":"73b87af92b5d87c3025f954b649fef08bdd36c8e","modified":1472442301055},{"_id":"public/css/styles.css.map","hash":"61bc0709283224840518b3f864b8552ebf245b9f","modified":1472442301056},{"_id":"public/fonts/calligraffitti-regular-webfont.ttf","hash":"4688935c427ae40dcbf16523bc11d9fc10e359b5","modified":1472442301056},{"_id":"public/css/personal.css","hash":"48fd3bcc3fa8c15620523815f79db21ec60f7d3e","modified":1472442301062},{"_id":"public/js/app.js","hash":"a6d6e7fba3d69d0dec2c4d18debe0dc4cc7ab319","modified":1472442301062},{"_id":"public/js/bundle.js","hash":"7da160b15a43ce19273ec85204828bd42628546f","modified":1472442301062},{"_id":"public/js/scroll-spy.js","hash":"81b81362fcd63592045a673b54ce1edb7a6e3028","modified":1472442301062},{"_id":"public/js/util.js","hash":"8136da2bec1faf5fe3e14fa436f501292fca8c07","modified":1472442301062},{"_id":"public/js/zenscroll.js","hash":"bea2a3571555fdae64e8fc56f161f9a4f427b335","modified":1472442301062},{"_id":"public/css/styles.css","hash":"975f1b389868464f9a99b7fa34827b42e20355e2","modified":1472442301062},{"_id":"public/js/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1472442301062},{"_id":"public/images/meicon.jpg","hash":"e8f1b9c119536477a0c2334c955e5a08da382fc3","modified":1472442301063},{"_id":"public/fonts/calligraffitti-regular-webfont.svg","hash":"76e1e4cee6f2b5d596c635631938ee5eb6ab3e67","modified":1472442301063},{"_id":"public/fonts/PoiretOne-Regular.svg","hash":"e21109783f218cb7849b12e867e0b775ce3fadda","modified":1472442301063},{"_id":"public/images/favicon.jpg","hash":"5f0e22bdf8ad0015caa6759f32963b6586b81fdc","modified":1472442301063},{"_id":"public/images/me.jpg","hash":"e8f1b9c119536477a0c2334c955e5a08da382fc3","modified":1472442301063},{"_id":"public/images/zhizhuwang.jpg","hash":"a0abe5f5fb2ff31d7f6d055244dbd6368164f5e7","modified":1472442301067},{"_id":"public/images/meddd.jpg","hash":"f0ae9eeb5ca26cf8b6707bd77185e6c30fd9e515","modified":1472442301068},{"_id":"public/fonts/Lobster-Regular.eot","hash":"4f0c85f63beb0d95610317e16f1d4acdd2962eee","modified":1472442301073},{"_id":"public/fonts/Lobster-Regular.ttf","hash":"50a84291b7012bfdcf9ff5116d6c7aa3f257f37f","modified":1472442301073},{"_id":"public/fonts/Lobster-Regular.woff","hash":"298b80b1c9f694e1a055d62a5d809863c89baf50","modified":1472442301073},{"_id":"public/images/bg.jpg","hash":"9477968db33a89a535ed185c0443cb3a89571adc","modified":1472442301075},{"_id":"public/fonts/Lobster-Regular.svg","hash":"be1cab622c673942fb4d11a23c012227938b4792","modified":1472442301077}],"Category":[],"Data":[],"Page":[{"title":"about","layout":"about","comments":1,"_content":"","source":"about/index.md","raw":"---\ntitle: about\nlayout: about\ncomments: true\n---\n","date":"2016-08-28T15:44:17.925Z","updated":"2016-08-28T15:44:17.925Z","path":"about/index.html","_id":"cisfi4lqo0001lzjq9auqbc71","content":"","excerpt":"","more":""},{"_content":"@font-face {\n  font-family: \"Meiryo\";\n  src: url(\"/fonts/Meiryo.eot\");\n  /* IE9 */\n  src: url(\"/fonts/Meiryo.eot?#iefix\") format(\"embedded-opentype\"), /* IE6-IE8 */\n  url(\"/fonts/Meiryo.woff\") format(\"woff\"), /* chrome, firefox */\n  url(\"/fonts/Meiryo.ttf\") format(\"truetype\"), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */\n  url(\"/fonts/Meiryo.svg#Meiryo\") format(\"svg\");\n  /* iOS 4.1- */\n  font-style: normal;\n  font-weight: normal;\n}\nhtml.page-home {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('/images/bg.jpg');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n\n  background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);\n  background-blend-mode: screen;\n/*  background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}\n","source":"css/personal-style.css","raw":"@font-face {\n  font-family: \"Meiryo\";\n  src: url(\"/fonts/Meiryo.eot\");\n  /* IE9 */\n  src: url(\"/fonts/Meiryo.eot?#iefix\") format(\"embedded-opentype\"), /* IE6-IE8 */\n  url(\"/fonts/Meiryo.woff\") format(\"woff\"), /* chrome, firefox */\n  url(\"/fonts/Meiryo.ttf\") format(\"truetype\"), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */\n  url(\"/fonts/Meiryo.svg#Meiryo\") format(\"svg\");\n  /* iOS 4.1- */\n  font-style: normal;\n  font-weight: normal;\n}\nhtml.page-home {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('/images/bg.jpg');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n\n  background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);\n  background-blend-mode: screen;\n/*  background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}\n","date":"2016-08-28T15:44:17.925Z","updated":"2016-08-28T15:44:17.925Z","path":"css/personal-style.css","layout":"false","title":"","comments":1,"_id":"cisfi4lqt0003lzjq8mo4zp9e","content":"@font-face {\n  font-family: \"Meiryo\";\n  src: url(\"/fonts/Meiryo.eot\");\n  /* IE9 */\n  src: url(\"/fonts/Meiryo.eot?#iefix\") format(\"embedded-opentype\"), /* IE6-IE8 */\n  url(\"/fonts/Meiryo.woff\") format(\"woff\"), /* chrome, firefox */\n  url(\"/fonts/Meiryo.ttf\") format(\"truetype\"), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */\n  url(\"/fonts/Meiryo.svg#Meiryo\") format(\"svg\");\n  /* iOS 4.1- */\n  font-style: normal;\n  font-weight: normal;\n}\nhtml.page-home {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('/images/bg.jpg');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n\n  background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);\n  background-blend-mode: screen;\n/*  background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}\n","excerpt":"","more":"@font-face {\n  font-family: \"Meiryo\";\n  src: url(\"/fonts/Meiryo.eot\");\n  /* IE9 */\n  src: url(\"/fonts/Meiryo.eot?#iefix\") format(\"embedded-opentype\"), /* IE6-IE8 */\n  url(\"/fonts/Meiryo.woff\") format(\"woff\"), /* chrome, firefox */\n  url(\"/fonts/Meiryo.ttf\") format(\"truetype\"), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */\n  url(\"/fonts/Meiryo.svg#Meiryo\") format(\"svg\");\n  /* iOS 4.1- */\n  font-style: normal;\n  font-weight: normal;\n}\nhtml.page-home {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('/images/bg.jpg');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n\n  background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);\n  background-blend-mode: screen;\n/*  background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}\n"},{"title":"link","layout":"link","comments":0,"_content":"","source":"link/index.md","raw":"---\ntitle: link\nlayout: link\ncomments: false\n---\n","date":"2016-08-28T15:44:17.929Z","updated":"2016-08-28T15:44:17.929Z","path":"link/index.html","_id":"cisfi4lr20006lzjqokv5aeeo","content":"","excerpt":"","more":""},{"title":"tag","layout":"tag","comments":0,"_content":"","source":"tag/index.md","raw":"---\ntitle: tag\nlayout: tag\ncomments: false\n---\n","date":"2016-08-28T15:44:17.929Z","updated":"2016-08-28T15:44:17.929Z","path":"tag/index.html","_id":"cisfi4lry000llzjqxm3u5qf0","content":"","excerpt":"","more":""},{"title":"BrainMatrix","layout":"project","comments":0,"_content":"\n","source":"project/index.md","raw":"---\ntitle: BrainMatrix\nlayout: project\ncomments: false\n---\n\n","date":"2016-08-28T15:44:17.929Z","updated":"2016-08-28T15:44:17.929Z","path":"project/index.html","_id":"cisfi4lrz000mlzjqx0vvqnuf","content":"","excerpt":"","more":""}],"Post":[{"title":"BranMatrix Brief","date":"2016-08-21T14:51:37.000Z","_content":"\n<div align=\"center\">\n<img src=\"/images/BrainMatrix/BrainMatrix.jpg\" width = \"500\" height = \"200\" alt=\"图片名称\" align=\"center\" />\n</div>\n\n# 简介\n　　随着计算机机器学习领域的突飞猛进，市场对人工智能的热情也越来越高，产出一个灵活性高、扩展性强的机器学习框架是相关从业者的心声。\n　　开源项目MXNET是由百度IDL深度学习实验室李沐、卡耐基梅隆大学陈天奇组织开发的一个深度学习框架，基于CXXNET, 用mshadow来做具体的数据计算，C++保证运行效率的轻量级开源平台。 在其它各种开源平台中综合性能突出，现在也在飞速发展中。\n　　而我们开发的BrainMatrix项目基于MXNET，不仅是深度学习，而且集成机器学习算法都适用的scala语言计算平台。\n\n# MXNET特点\n1、轻量级调度引擎。\n2、符号计算支持。\n3、混合执行引擎。\n4、支持多GPU运算和分布式计算（核心竞争力）\n5、代码简洁高效。\n# BrainMatrix特点\n1.具有MXNET以上的所有特点，而且对使用者提供了更多自定义的可能。\n2.Scala语言一方面吸收继承了多种语言中的优秀特性，一方面右没有抛弃Java这个强大的平台，运行在JVM之上，轻松实现和Java类互联互通。它既是纯面对对象语言，又支持函数式编程，并且它确是严格意义上的静态语言。\n3.相对于C++而言，Scala更加易于机器学习从业者学习和使用，提供更多DIY（自定义）操作。\n4.Scala 语言也是分布式框架Spark的原生语言，易于和Spark完成对接工作。\n5.将提供其它机器学习接口，比如ladder Network, Spiking等。\n\n# 组织结构\n　　MXNET主要分为三个层次：Symbol Graph , Computational Graph，Operator。这三个层次依次递减，Symbol Graph负责抽象计算图，提供接口。Computational Graph 负责生成节点计算图和优化计算图，分配GPU和内存空间。Operator提供具体的运算。分工明确，组织合理。\n　　MXNET-Scala框架则是将Symbol Graph部分，用Scala实现并改进，使Scala部分有了更多的操作范围和空间。\n<div align=\"center\">\n![jpg](/images/BrainMatrix/architecture_2.jpg)\n</div>\n","source":"_posts/BranMatrix Brief.md","raw":"---\ntitle: BranMatrix Brief\ndate: 2016-08-21 22:51:37\ntags: work\n---\n\n<div align=\"center\">\n<img src=\"/images/BrainMatrix/BrainMatrix.jpg\" width = \"500\" height = \"200\" alt=\"图片名称\" align=\"center\" />\n</div>\n\n# 简介\n　　随着计算机机器学习领域的突飞猛进，市场对人工智能的热情也越来越高，产出一个灵活性高、扩展性强的机器学习框架是相关从业者的心声。\n　　开源项目MXNET是由百度IDL深度学习实验室李沐、卡耐基梅隆大学陈天奇组织开发的一个深度学习框架，基于CXXNET, 用mshadow来做具体的数据计算，C++保证运行效率的轻量级开源平台。 在其它各种开源平台中综合性能突出，现在也在飞速发展中。\n　　而我们开发的BrainMatrix项目基于MXNET，不仅是深度学习，而且集成机器学习算法都适用的scala语言计算平台。\n\n# MXNET特点\n1、轻量级调度引擎。\n2、符号计算支持。\n3、混合执行引擎。\n4、支持多GPU运算和分布式计算（核心竞争力）\n5、代码简洁高效。\n# BrainMatrix特点\n1.具有MXNET以上的所有特点，而且对使用者提供了更多自定义的可能。\n2.Scala语言一方面吸收继承了多种语言中的优秀特性，一方面右没有抛弃Java这个强大的平台，运行在JVM之上，轻松实现和Java类互联互通。它既是纯面对对象语言，又支持函数式编程，并且它确是严格意义上的静态语言。\n3.相对于C++而言，Scala更加易于机器学习从业者学习和使用，提供更多DIY（自定义）操作。\n4.Scala 语言也是分布式框架Spark的原生语言，易于和Spark完成对接工作。\n5.将提供其它机器学习接口，比如ladder Network, Spiking等。\n\n# 组织结构\n　　MXNET主要分为三个层次：Symbol Graph , Computational Graph，Operator。这三个层次依次递减，Symbol Graph负责抽象计算图，提供接口。Computational Graph 负责生成节点计算图和优化计算图，分配GPU和内存空间。Operator提供具体的运算。分工明确，组织合理。\n　　MXNET-Scala框架则是将Symbol Graph部分，用Scala实现并改进，使Scala部分有了更多的操作范围和空间。\n<div align=\"center\">\n![jpg](/images/BrainMatrix/architecture_2.jpg)\n</div>\n","slug":"BranMatrix Brief","published":1,"updated":"2016-08-28T15:44:17.925Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisfi4lqj0000lzjqomq76q6q","content":"<div align=\"center\"><br><img src=\"/images/BrainMatrix/BrainMatrix.jpg\" width=\"500\" height=\"200\" alt=\"图片名称\" align=\"center\"><br></div>\n\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>　　随着计算机机器学习领域的突飞猛进，市场对人工智能的热情也越来越高，产出一个灵活性高、扩展性强的机器学习框架是相关从业者的心声。<br>　　开源项目MXNET是由百度IDL深度学习实验室李沐、卡耐基梅隆大学陈天奇组织开发的一个深度学习框架，基于CXXNET, 用mshadow来做具体的数据计算，C++保证运行效率的轻量级开源平台。 在其它各种开源平台中综合性能突出，现在也在飞速发展中。<br>　　而我们开发的BrainMatrix项目基于MXNET，不仅是深度学习，而且集成机器学习算法都适用的scala语言计算平台。</p>\n<h1 id=\"MXNET特点\"><a href=\"#MXNET特点\" class=\"headerlink\" title=\"MXNET特点\"></a>MXNET特点</h1><p>1、轻量级调度引擎。<br>2、符号计算支持。<br>3、混合执行引擎。<br>4、支持多GPU运算和分布式计算（核心竞争力）<br>5、代码简洁高效。</p>\n<h1 id=\"BrainMatrix特点\"><a href=\"#BrainMatrix特点\" class=\"headerlink\" title=\"BrainMatrix特点\"></a>BrainMatrix特点</h1><p>1.具有MXNET以上的所有特点，而且对使用者提供了更多自定义的可能。<br>2.Scala语言一方面吸收继承了多种语言中的优秀特性，一方面右没有抛弃Java这个强大的平台，运行在JVM之上，轻松实现和Java类互联互通。它既是纯面对对象语言，又支持函数式编程，并且它确是严格意义上的静态语言。<br>3.相对于C++而言，Scala更加易于机器学习从业者学习和使用，提供更多DIY（自定义）操作。<br>4.Scala 语言也是分布式框架Spark的原生语言，易于和Spark完成对接工作。<br>5.将提供其它机器学习接口，比如ladder Network, Spiking等。</p>\n<h1 id=\"组织结构\"><a href=\"#组织结构\" class=\"headerlink\" title=\"组织结构\"></a>组织结构</h1><p>　　MXNET主要分为三个层次：Symbol Graph , Computational Graph，Operator。这三个层次依次递减，Symbol Graph负责抽象计算图，提供接口。Computational Graph 负责生成节点计算图和优化计算图，分配GPU和内存空间。Operator提供具体的运算。分工明确，组织合理。<br>　　MXNET-Scala框架则是将Symbol Graph部分，用Scala实现并改进，使Scala部分有了更多的操作范围和空间。</p>\n<div align=\"center\"><br><img src=\"/images/BrainMatrix/architecture_2.jpg\" alt=\"jpg\"><br></div>\n","excerpt":"","more":"<div align=\"center\"><br><img src=\"/images/BrainMatrix/BrainMatrix.jpg\" width = \"500\" height = \"200\" alt=\"图片名称\" align=\"center\" /><br></div>\n\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>　　随着计算机机器学习领域的突飞猛进，市场对人工智能的热情也越来越高，产出一个灵活性高、扩展性强的机器学习框架是相关从业者的心声。<br>　　开源项目MXNET是由百度IDL深度学习实验室李沐、卡耐基梅隆大学陈天奇组织开发的一个深度学习框架，基于CXXNET, 用mshadow来做具体的数据计算，C++保证运行效率的轻量级开源平台。 在其它各种开源平台中综合性能突出，现在也在飞速发展中。<br>　　而我们开发的BrainMatrix项目基于MXNET，不仅是深度学习，而且集成机器学习算法都适用的scala语言计算平台。</p>\n<h1 id=\"MXNET特点\"><a href=\"#MXNET特点\" class=\"headerlink\" title=\"MXNET特点\"></a>MXNET特点</h1><p>1、轻量级调度引擎。<br>2、符号计算支持。<br>3、混合执行引擎。<br>4、支持多GPU运算和分布式计算（核心竞争力）<br>5、代码简洁高效。</p>\n<h1 id=\"BrainMatrix特点\"><a href=\"#BrainMatrix特点\" class=\"headerlink\" title=\"BrainMatrix特点\"></a>BrainMatrix特点</h1><p>1.具有MXNET以上的所有特点，而且对使用者提供了更多自定义的可能。<br>2.Scala语言一方面吸收继承了多种语言中的优秀特性，一方面右没有抛弃Java这个强大的平台，运行在JVM之上，轻松实现和Java类互联互通。它既是纯面对对象语言，又支持函数式编程，并且它确是严格意义上的静态语言。<br>3.相对于C++而言，Scala更加易于机器学习从业者学习和使用，提供更多DIY（自定义）操作。<br>4.Scala 语言也是分布式框架Spark的原生语言，易于和Spark完成对接工作。<br>5.将提供其它机器学习接口，比如ladder Network, Spiking等。</p>\n<h1 id=\"组织结构\"><a href=\"#组织结构\" class=\"headerlink\" title=\"组织结构\"></a>组织结构</h1><p>　　MXNET主要分为三个层次：Symbol Graph , Computational Graph，Operator。这三个层次依次递减，Symbol Graph负责抽象计算图，提供接口。Computational Graph 负责生成节点计算图和优化计算图，分配GPU和内存空间。Operator提供具体的运算。分工明确，组织合理。<br>　　MXNET-Scala框架则是将Symbol Graph部分，用Scala实现并改进，使Scala部分有了更多的操作范围和空间。</p>\n<div align=\"center\"><br><img src=\"/images/BrainMatrix/architecture_2.jpg\" alt=\"jpg\"><br></div>\n"},{"title":"Crawler Tutorial1.0","date":"2016-08-20T09:21:20.000Z","_content":"<div align=\"center\">\n<img src=\"/images/zhizhuwang.jpg\" width = \"500\" height = \"200\" alt=\"图片名称\" align=center />\n</div>\n# 创建\n`scapy startproject w3school`\n* 项目w3school\n这时会产生w3school文件夹，文件夹下文件如下：\n``` bash\nscrapy.cfg  \nw3school/  \n    __init__.py  \n    items.py  \n    pipelines.py  \n    settings.py  \n    spiders/  \n\t__init__.py\n```\n其中scrapy.cfg目的配置文件。主要改写的是w3school中的三个文件以及其中spiders中需要编写的爬虫。\n\n* 在items.py中定义Item容器。\n也就是编写items.py内容。所谓Item容器就是将在网页中获取的数据结构化保存的数据结构，类似于Python中字典。下面为items.py中代码。\n``` bash\n#project: w3school  \n#file   : items.py  \n#author : younghz  \n#brief  : define W3schoolItem.  \nfrom scrapy.item import Item,Field  \n\nclass W3schoolItem(Item):  \n\ttitle = Field()  \n\tlink = Field()  \n\tdesc = Field()  \n```\n上面定义了自己的W3schoolItem类，它继承自scrapy的Item（这里没有显示定义W3schoolItem的__init__()方法，也正因为如此，python也会为你自动调用基类的__init__()，否则必须显式在子类的__init__()中调用基类__init__()）。\n之后声明W3schoolItem中元素并使用Field定义。到此items.py就OK了。\n\n\n* 在pipelines.py中编写W3schoolPipeline实现对item的处理。\n在其中主要完成数据的查重、丢弃，验证item中数据，将得到的item数据保存等工作。代码如下：\n``` bash\nimport json  \nimport codecs    \nclass W3SchoolPipeline(object):  \n    def __init__(self):  \n\tself.file = codecs.open('w3school_data_utf8.json', 'wb', encoding='utf-8')  \n  \n    def process_item(self, item, spider):  \n\tline = json.dumps(dict(item)) + '\\n'  \n\t# print line  \n\tself.file.write(line.decode(\"unicode_escape\"))  \n\treturn item  \n```\n其中的process_item方法是必须调用的用来处理item，并且返回值必须为Item类的对象，或者是抛出DropItem异常。并且上述方法将得到的item实现解码，以便正常显示中文，最终保存到json文件中。\n\n注意：在编写完pipeline后，为了能够启动它，必须将其加入到ITEM_PIPLINES配置中，即在settings.py中加入下面一句：\nITEM_PIPELINES = {  \n    'w3school.pipelines.W3SchoolPipeline':300  \n}  \n\n# 编写爬虫\n爬虫编写是在spider/文件夹下编写w3cshool_spider.py。\n先上整个程序在慢慢解释：\n``` bash\n#!/usr/bin/python  \n# -*- coding:utf-8 -*-  \nfrom scrapy.spiders import Spider  \nfrom scrapy.selector import Selector  \nfrom scrapy import log  \n\nfrom w3school.items import W3schoolItem  \nclass W3schoolSpider(Spider):  \n\"\"\"爬取w3school标签\"\"\"  \n#log.start(\"log\",loglevel='INFO')  \nname = \"w3school\"  \nallowed_domains = [\"w3school.com.cn\"]  \nstart_urls = [  \n\"http://www.w3school.com.cn/xml/xml_syntax.asp\"  \n]  \n\ndef parse(self, response):  \nsel = Selector(response)  \nsites = sel.xpath('//div[@id=\"navsecond\"]/div[@id=\"course\"]/ul[1]/li')  \nitems = []  \n\nfor site in sites:  \n    item = W3schoolItem()  \n\n    title = site.xpath('a/text()').extract()  \n    link = site.xpath('a/@href').extract()  \n    desc = site.xpath('a/@title').extract()  \n\n    item['title'] = [t.encode('utf-8') for t in title]  \n    item['link'] = [l.encode('utf-8') for l in link]  \n    item['desc'] = [d.encode('utf-8') for d in desc]  \n    items.append(item)  \n\n    #记录  \n    log.msg(\"Appending item...\",level='INFO')  \n    log.msg(\"Append done.\",level='INFO')\nreturn items\n```\n（1）需要注意的是编写的spider必须继承自scrapy的Spider类。\n属性name即spider唯一名字，start_url可以理解为爬取入口。\n（2）parse方法。\nparse（）是对scrapy.Spider类的override。\n（3）网页中的数据提取机制。\nscrapy使用选择器Selector并通过XPath实现数据的提取。关于XPath 推荐w3school的教程。\n\n# 匹配\n* 1. sites = sel.xpath('//div[@id=\"navsecond\"]/div[@id=\"course\"]/ul[2]/li')  \n以下是网页源代码，命令中`@id=\"navsecond\"`匹配第一个div，course匹配第二个div，ul匹配下一级`<ul>`,序号[2]表示第2个`<ul>`框中内容。\n\n``` bash\n</div>\n\n<div id=\"navsecond\">\n\n<div id=\"course\"><h2>XML 基础</h2>\n<ul>\n<li class=\"currentLink\"><a href=\"/xml/index.asp\" title=\"XML 教程\">XML 教程</a></li>\n<li><a href=\"/xml/xml_intro.asp\" title=\"XML 简介\">XML 简介</a></li>\n<li><a href=\"/xml/xml_usedfor.asp\" title=\"XML 的用途\">XML 用途</a></li>\n<li><a href=\"/xml/xml_tree.asp\" title=\"XML 树结构\">XML 树结构</a></li>\n<li><a href=\"/xml/xml_syntax.asp\" title=\"XML 语法规则\">XML 语法</a></li>\n<li><a href=\"/xml/xml_elements.asp\" title=\"XML 元素\">XML 元素</a></li>\n<li><a href=\"/xml/xml_attributes.asp\" title=\"XML 属性\">XML 属性</a></li>\n<li><a href=\"/xml/xml_dtd.asp\" title=\"XML 验证\">XML 验证</a></li>\n<li><a href=\"/xml/xml_validator.asp\" title=\"XML 验证器\">XML 验证器</a></li>\n<li><a href=\"/xml/xml_browsers.asp\" title=\"XML 浏览器支持\">XML 浏览器</a></li>\n<li><a href=\"/xml/xml_view.asp\" title=\"查看 XML 文件\">XML 查看</a></li>\n<li><a href=\"/xml/xml_display.asp\" title=\"使用 CSS 显示 XML\">XML CSS</a></li>\n<li><a href=\"/xml/xml_xsl.asp\" title=\"使用 XSLT 显示 XML\">XML XSLT</a></li>\n</ul>\n<h2>XML JavaScript</h2>\n<ul>\n<li><a href=\"/xml/xml_http.asp\" title=\"XMLHttpRequest 对象\">XML HTTP Request</a></li>\n<li><a href=\"/xml/xml_parser.asp\" title=\"XML 解析器\">XML 解析器</a></li>\n<li><a href=\"/xml/xml_dom.asp\" title=\"XML DOM\">XML DOM</a></li>\n<li><a href=\"/xml/xml_to_html.asp\" title=\"XML to HTML\">XML to HTML</a></li>\n<li><a href=\"/xml/xml_applications.asp\" title=\"XML 应用程序\">XML 应用程序</a></li>\n</ul>\n<h2>XML 高级</h2>\n<ul>\n...\n```\n\n# Reference\n\\[1\\]scrapy研究探索（二）——爬w3school:http://blog.csdn.net/u012150179/article/details/32911511\n","source":"_posts/Crawler Tutorial1.0.md","raw":"---\ntitle: Crawler Tutorial1.0\ndate: 2016-08-20 17:21:20\ntags: work\n---\n<div align=\"center\">\n<img src=\"/images/zhizhuwang.jpg\" width = \"500\" height = \"200\" alt=\"图片名称\" align=center />\n</div>\n# 创建\n`scapy startproject w3school`\n* 项目w3school\n这时会产生w3school文件夹，文件夹下文件如下：\n``` bash\nscrapy.cfg  \nw3school/  \n    __init__.py  \n    items.py  \n    pipelines.py  \n    settings.py  \n    spiders/  \n\t__init__.py\n```\n其中scrapy.cfg目的配置文件。主要改写的是w3school中的三个文件以及其中spiders中需要编写的爬虫。\n\n* 在items.py中定义Item容器。\n也就是编写items.py内容。所谓Item容器就是将在网页中获取的数据结构化保存的数据结构，类似于Python中字典。下面为items.py中代码。\n``` bash\n#project: w3school  \n#file   : items.py  \n#author : younghz  \n#brief  : define W3schoolItem.  \nfrom scrapy.item import Item,Field  \n\nclass W3schoolItem(Item):  \n\ttitle = Field()  \n\tlink = Field()  \n\tdesc = Field()  \n```\n上面定义了自己的W3schoolItem类，它继承自scrapy的Item（这里没有显示定义W3schoolItem的__init__()方法，也正因为如此，python也会为你自动调用基类的__init__()，否则必须显式在子类的__init__()中调用基类__init__()）。\n之后声明W3schoolItem中元素并使用Field定义。到此items.py就OK了。\n\n\n* 在pipelines.py中编写W3schoolPipeline实现对item的处理。\n在其中主要完成数据的查重、丢弃，验证item中数据，将得到的item数据保存等工作。代码如下：\n``` bash\nimport json  \nimport codecs    \nclass W3SchoolPipeline(object):  \n    def __init__(self):  \n\tself.file = codecs.open('w3school_data_utf8.json', 'wb', encoding='utf-8')  \n  \n    def process_item(self, item, spider):  \n\tline = json.dumps(dict(item)) + '\\n'  \n\t# print line  \n\tself.file.write(line.decode(\"unicode_escape\"))  \n\treturn item  \n```\n其中的process_item方法是必须调用的用来处理item，并且返回值必须为Item类的对象，或者是抛出DropItem异常。并且上述方法将得到的item实现解码，以便正常显示中文，最终保存到json文件中。\n\n注意：在编写完pipeline后，为了能够启动它，必须将其加入到ITEM_PIPLINES配置中，即在settings.py中加入下面一句：\nITEM_PIPELINES = {  \n    'w3school.pipelines.W3SchoolPipeline':300  \n}  \n\n# 编写爬虫\n爬虫编写是在spider/文件夹下编写w3cshool_spider.py。\n先上整个程序在慢慢解释：\n``` bash\n#!/usr/bin/python  \n# -*- coding:utf-8 -*-  \nfrom scrapy.spiders import Spider  \nfrom scrapy.selector import Selector  \nfrom scrapy import log  \n\nfrom w3school.items import W3schoolItem  \nclass W3schoolSpider(Spider):  \n\"\"\"爬取w3school标签\"\"\"  \n#log.start(\"log\",loglevel='INFO')  \nname = \"w3school\"  \nallowed_domains = [\"w3school.com.cn\"]  \nstart_urls = [  \n\"http://www.w3school.com.cn/xml/xml_syntax.asp\"  \n]  \n\ndef parse(self, response):  \nsel = Selector(response)  \nsites = sel.xpath('//div[@id=\"navsecond\"]/div[@id=\"course\"]/ul[1]/li')  \nitems = []  \n\nfor site in sites:  \n    item = W3schoolItem()  \n\n    title = site.xpath('a/text()').extract()  \n    link = site.xpath('a/@href').extract()  \n    desc = site.xpath('a/@title').extract()  \n\n    item['title'] = [t.encode('utf-8') for t in title]  \n    item['link'] = [l.encode('utf-8') for l in link]  \n    item['desc'] = [d.encode('utf-8') for d in desc]  \n    items.append(item)  \n\n    #记录  \n    log.msg(\"Appending item...\",level='INFO')  \n    log.msg(\"Append done.\",level='INFO')\nreturn items\n```\n（1）需要注意的是编写的spider必须继承自scrapy的Spider类。\n属性name即spider唯一名字，start_url可以理解为爬取入口。\n（2）parse方法。\nparse（）是对scrapy.Spider类的override。\n（3）网页中的数据提取机制。\nscrapy使用选择器Selector并通过XPath实现数据的提取。关于XPath 推荐w3school的教程。\n\n# 匹配\n* 1. sites = sel.xpath('//div[@id=\"navsecond\"]/div[@id=\"course\"]/ul[2]/li')  \n以下是网页源代码，命令中`@id=\"navsecond\"`匹配第一个div，course匹配第二个div，ul匹配下一级`<ul>`,序号[2]表示第2个`<ul>`框中内容。\n\n``` bash\n</div>\n\n<div id=\"navsecond\">\n\n<div id=\"course\"><h2>XML 基础</h2>\n<ul>\n<li class=\"currentLink\"><a href=\"/xml/index.asp\" title=\"XML 教程\">XML 教程</a></li>\n<li><a href=\"/xml/xml_intro.asp\" title=\"XML 简介\">XML 简介</a></li>\n<li><a href=\"/xml/xml_usedfor.asp\" title=\"XML 的用途\">XML 用途</a></li>\n<li><a href=\"/xml/xml_tree.asp\" title=\"XML 树结构\">XML 树结构</a></li>\n<li><a href=\"/xml/xml_syntax.asp\" title=\"XML 语法规则\">XML 语法</a></li>\n<li><a href=\"/xml/xml_elements.asp\" title=\"XML 元素\">XML 元素</a></li>\n<li><a href=\"/xml/xml_attributes.asp\" title=\"XML 属性\">XML 属性</a></li>\n<li><a href=\"/xml/xml_dtd.asp\" title=\"XML 验证\">XML 验证</a></li>\n<li><a href=\"/xml/xml_validator.asp\" title=\"XML 验证器\">XML 验证器</a></li>\n<li><a href=\"/xml/xml_browsers.asp\" title=\"XML 浏览器支持\">XML 浏览器</a></li>\n<li><a href=\"/xml/xml_view.asp\" title=\"查看 XML 文件\">XML 查看</a></li>\n<li><a href=\"/xml/xml_display.asp\" title=\"使用 CSS 显示 XML\">XML CSS</a></li>\n<li><a href=\"/xml/xml_xsl.asp\" title=\"使用 XSLT 显示 XML\">XML XSLT</a></li>\n</ul>\n<h2>XML JavaScript</h2>\n<ul>\n<li><a href=\"/xml/xml_http.asp\" title=\"XMLHttpRequest 对象\">XML HTTP Request</a></li>\n<li><a href=\"/xml/xml_parser.asp\" title=\"XML 解析器\">XML 解析器</a></li>\n<li><a href=\"/xml/xml_dom.asp\" title=\"XML DOM\">XML DOM</a></li>\n<li><a href=\"/xml/xml_to_html.asp\" title=\"XML to HTML\">XML to HTML</a></li>\n<li><a href=\"/xml/xml_applications.asp\" title=\"XML 应用程序\">XML 应用程序</a></li>\n</ul>\n<h2>XML 高级</h2>\n<ul>\n...\n```\n\n# Reference\n\\[1\\]scrapy研究探索（二）——爬w3school:http://blog.csdn.net/u012150179/article/details/32911511\n","slug":"Crawler Tutorial1.0","published":1,"updated":"2016-08-28T15:44:17.925Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisfi4lqq0002lzjqqmq6pii1","content":"<p><div align=\"center\"><br><img src=\"/images/zhizhuwang.jpg\" width=\"500\" height=\"200\" alt=\"图片名称\" align=\"center\"><br></div></p>\n<h1 id=\"创建\"><a href=\"#创建\" class=\"headerlink\" title=\"创建\"></a>创建</h1><p><code>scapy startproject w3school</code></p>\n<ul>\n<li>项目w3school<br>这时会产生w3school文件夹，文件夹下文件如下：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">scrapy.cfg  </div><div class=\"line\">w3school/  </div><div class=\"line\">    __init__.py  </div><div class=\"line\">    items.py  </div><div class=\"line\">    pipelines.py  </div><div class=\"line\">    settings.py  </div><div class=\"line\">    spiders/  </div><div class=\"line\">\t__init__.py</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>其中scrapy.cfg目的配置文件。主要改写的是w3school中的三个文件以及其中spiders中需要编写的爬虫。</p>\n<ul>\n<li>在items.py中定义Item容器。<br>也就是编写items.py内容。所谓Item容器就是将在网页中获取的数据结构化保存的数据结构，类似于Python中字典。下面为items.py中代码。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#project: w3school  </span></div><div class=\"line\"><span class=\"comment\">#file   : items.py  </span></div><div class=\"line\"><span class=\"comment\">#author : younghz  </span></div><div class=\"line\"><span class=\"comment\">#brief  : define W3schoolItem.  </span></div><div class=\"line\">from scrapy.item import Item,Field  </div><div class=\"line\"></div><div class=\"line\">class W3schoolItem(Item):  </div><div class=\"line\">\ttitle = Field()  </div><div class=\"line\">\tlink = Field()  </div><div class=\"line\">\tdesc = Field()</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>上面定义了自己的W3schoolItem类，它继承自scrapy的Item（这里没有显示定义W3schoolItem的<strong>init</strong>()方法，也正因为如此，python也会为你自动调用基类的<strong>init</strong>()，否则必须显式在子类的<strong>init</strong>()中调用基类<strong>init</strong>()）。<br>之后声明W3schoolItem中元素并使用Field定义。到此items.py就OK了。</p>\n<ul>\n<li>在pipelines.py中编写W3schoolPipeline实现对item的处理。<br>在其中主要完成数据的查重、丢弃，验证item中数据，将得到的item数据保存等工作。代码如下：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">import json  </div><div class=\"line\">import codecs    </div><div class=\"line\">class W3SchoolPipeline(object):  </div><div class=\"line\">    def __init__(self):  </div><div class=\"line\">\tself.file = codecs.open(<span class=\"string\">'w3school_data_utf8.json'</span>, <span class=\"string\">'wb'</span>, encoding=<span class=\"string\">'utf-8'</span>)  </div><div class=\"line\">  </div><div class=\"line\">    def process_item(self, item, spider):  </div><div class=\"line\">\tline = json.dumps(dict(item)) + <span class=\"string\">'\\n'</span>  </div><div class=\"line\">\t<span class=\"comment\"># print line  </span></div><div class=\"line\">\tself.file.write(line.decode(<span class=\"string\">\"unicode_escape\"</span>))  </div><div class=\"line\">\t<span class=\"built_in\">return</span> item</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>其中的process_item方法是必须调用的用来处理item，并且返回值必须为Item类的对象，或者是抛出DropItem异常。并且上述方法将得到的item实现解码，以便正常显示中文，最终保存到json文件中。</p>\n<p>注意：在编写完pipeline后，为了能够启动它，必须将其加入到ITEM_PIPLINES配置中，即在settings.py中加入下面一句：<br>ITEM_PIPELINES = {<br>    ‘w3school.pipelines.W3SchoolPipeline’:300<br>}  </p>\n<h1 id=\"编写爬虫\"><a href=\"#编写爬虫\" class=\"headerlink\" title=\"编写爬虫\"></a>编写爬虫</h1><p>爬虫编写是在spider/文件夹下编写w3cshool_spider.py。<br>先上整个程序在慢慢解释：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python  </span></div><div class=\"line\"><span class=\"comment\"># -*- coding:utf-8 -*-  </span></div><div class=\"line\">from scrapy.spiders import Spider  </div><div class=\"line\">from scrapy.selector import Selector  </div><div class=\"line\">from scrapy import <span class=\"built_in\">log</span>  </div><div class=\"line\"></div><div class=\"line\">from w3school.items import W3schoolItem  </div><div class=\"line\">class W3schoolSpider(Spider):  </div><div class=\"line\"><span class=\"string\">\"\"</span><span class=\"string\">\"爬取w3school标签\"</span><span class=\"string\">\"\"</span>  </div><div class=\"line\"><span class=\"comment\">#log.start(\"log\",loglevel='INFO')  </span></div><div class=\"line\">name = <span class=\"string\">\"w3school\"</span>  </div><div class=\"line\">allowed_domains = [<span class=\"string\">\"w3school.com.cn\"</span>]  </div><div class=\"line\">start_urls = [  </div><div class=\"line\"><span class=\"string\">\"http://www.w3school.com.cn/xml/xml_syntax.asp\"</span>  </div><div class=\"line\">]  </div><div class=\"line\"></div><div class=\"line\">def parse(self, response):  </div><div class=\"line\">sel = Selector(response)  </div><div class=\"line\">sites = sel.xpath(<span class=\"string\">'//div[@id=\"navsecond\"]/div[@id=\"course\"]/ul[1]/li'</span>)  </div><div class=\"line\">items = []  </div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> site <span class=\"keyword\">in</span> sites:  </div><div class=\"line\">    item = W3schoolItem()  </div><div class=\"line\"></div><div class=\"line\">    title = site.xpath(<span class=\"string\">'a/text()'</span>).extract()  </div><div class=\"line\">    link = site.xpath(<span class=\"string\">'a/@href'</span>).extract()  </div><div class=\"line\">    desc = site.xpath(<span class=\"string\">'a/@title'</span>).extract()  </div><div class=\"line\"></div><div class=\"line\">    item[<span class=\"string\">'title'</span>] = [t.encode(<span class=\"string\">'utf-8'</span>) <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> title]  </div><div class=\"line\">    item[<span class=\"string\">'link'</span>] = [l.encode(<span class=\"string\">'utf-8'</span>) <span class=\"keyword\">for</span> l <span class=\"keyword\">in</span> link]  </div><div class=\"line\">    item[<span class=\"string\">'desc'</span>] = [d.encode(<span class=\"string\">'utf-8'</span>) <span class=\"keyword\">for</span> d <span class=\"keyword\">in</span> desc]  </div><div class=\"line\">    items.append(item)  </div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">#记录  </span></div><div class=\"line\">    log.msg(<span class=\"string\">\"Appending item...\"</span>,level=<span class=\"string\">'INFO'</span>)  </div><div class=\"line\">    log.msg(<span class=\"string\">\"Append done.\"</span>,level=<span class=\"string\">'INFO'</span>)</div><div class=\"line\"><span class=\"built_in\">return</span> items</div></pre></td></tr></table></figure></p>\n<p>（1）需要注意的是编写的spider必须继承自scrapy的Spider类。<br>属性name即spider唯一名字，start_url可以理解为爬取入口。<br>（2）parse方法。<br>parse（）是对scrapy.Spider类的override。<br>（3）网页中的数据提取机制。<br>scrapy使用选择器Selector并通过XPath实现数据的提取。关于XPath 推荐w3school的教程。</p>\n<h1 id=\"匹配\"><a href=\"#匹配\" class=\"headerlink\" title=\"匹配\"></a>匹配</h1><ul>\n<li><ol>\n<li>sites = sel.xpath(‘//div[@id=”navsecond”]/div[@id=”course”]/ul[2]/li’)<br>以下是网页源代码，命令中<code>@id=&quot;navsecond&quot;</code>匹配第一个div，course匹配第二个div，ul匹配下一级<code>&lt;ul&gt;</code>,序号[2]表示第2个<code>&lt;ul&gt;</code>框中内容。</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;div id=<span class=\"string\">\"navsecond\"</span>&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;div id=<span class=\"string\">\"course\"</span>&gt;&lt;h2&gt;XML 基础&lt;/h2&gt;</div><div class=\"line\">&lt;ul&gt;</div><div class=\"line\">&lt;li class=<span class=\"string\">\"currentLink\"</span>&gt;&lt;a href=<span class=\"string\">\"/xml/index.asp\"</span> title=<span class=\"string\">\"XML 教程\"</span>&gt;XML 教程&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_intro.asp\"</span> title=<span class=\"string\">\"XML 简介\"</span>&gt;XML 简介&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_usedfor.asp\"</span> title=<span class=\"string\">\"XML 的用途\"</span>&gt;XML 用途&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_tree.asp\"</span> title=<span class=\"string\">\"XML 树结构\"</span>&gt;XML 树结构&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_syntax.asp\"</span> title=<span class=\"string\">\"XML 语法规则\"</span>&gt;XML 语法&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_elements.asp\"</span> title=<span class=\"string\">\"XML 元素\"</span>&gt;XML 元素&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_attributes.asp\"</span> title=<span class=\"string\">\"XML 属性\"</span>&gt;XML 属性&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_dtd.asp\"</span> title=<span class=\"string\">\"XML 验证\"</span>&gt;XML 验证&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_validator.asp\"</span> title=<span class=\"string\">\"XML 验证器\"</span>&gt;XML 验证器&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_browsers.asp\"</span> title=<span class=\"string\">\"XML 浏览器支持\"</span>&gt;XML 浏览器&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_view.asp\"</span> title=<span class=\"string\">\"查看 XML 文件\"</span>&gt;XML 查看&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_display.asp\"</span> title=<span class=\"string\">\"使用 CSS 显示 XML\"</span>&gt;XML CSS&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_xsl.asp\"</span> title=<span class=\"string\">\"使用 XSLT 显示 XML\"</span>&gt;XML XSLT&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;/ul&gt;</div><div class=\"line\">&lt;h2&gt;XML JavaScript&lt;/h2&gt;</div><div class=\"line\">&lt;ul&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_http.asp\"</span> title=<span class=\"string\">\"XMLHttpRequest 对象\"</span>&gt;XML HTTP Request&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_parser.asp\"</span> title=<span class=\"string\">\"XML 解析器\"</span>&gt;XML 解析器&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_dom.asp\"</span> title=<span class=\"string\">\"XML DOM\"</span>&gt;XML DOM&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_to_html.asp\"</span> title=<span class=\"string\">\"XML to HTML\"</span>&gt;XML to HTML&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_applications.asp\"</span> title=<span class=\"string\">\"XML 应用程序\"</span>&gt;XML 应用程序&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;/ul&gt;</div><div class=\"line\">&lt;h2&gt;XML 高级&lt;/h2&gt;</div><div class=\"line\">&lt;ul&gt;</div><div class=\"line\">...</div></pre></td></tr></table></figure>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><p>[1]scrapy研究探索（二）——爬w3school:<a href=\"http://blog.csdn.net/u012150179/article/details/32911511\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/u012150179/article/details/32911511</a></p>\n","excerpt":"","more":"<p><div align=\"center\"><br><img src=\"/images/zhizhuwang.jpg\" width = \"500\" height = \"200\" alt=\"图片名称\" align=center /><br></div></p>\n<h1 id=\"创建\"><a href=\"#创建\" class=\"headerlink\" title=\"创建\"></a>创建</h1><p><code>scapy startproject w3school</code></p>\n<ul>\n<li>项目w3school<br>这时会产生w3school文件夹，文件夹下文件如下：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">scrapy.cfg  </div><div class=\"line\">w3school/  </div><div class=\"line\">    __init__.py  </div><div class=\"line\">    items.py  </div><div class=\"line\">    pipelines.py  </div><div class=\"line\">    settings.py  </div><div class=\"line\">    spiders/  </div><div class=\"line\">\t__init__.py</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>其中scrapy.cfg目的配置文件。主要改写的是w3school中的三个文件以及其中spiders中需要编写的爬虫。</p>\n<ul>\n<li>在items.py中定义Item容器。<br>也就是编写items.py内容。所谓Item容器就是将在网页中获取的数据结构化保存的数据结构，类似于Python中字典。下面为items.py中代码。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#project: w3school  </span></div><div class=\"line\"><span class=\"comment\">#file   : items.py  </span></div><div class=\"line\"><span class=\"comment\">#author : younghz  </span></div><div class=\"line\"><span class=\"comment\">#brief  : define W3schoolItem.  </span></div><div class=\"line\">from scrapy.item import Item,Field  </div><div class=\"line\"></div><div class=\"line\">class W3schoolItem(Item):  </div><div class=\"line\">\ttitle = Field()  </div><div class=\"line\">\tlink = Field()  </div><div class=\"line\">\tdesc = Field()</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>上面定义了自己的W3schoolItem类，它继承自scrapy的Item（这里没有显示定义W3schoolItem的<strong>init</strong>()方法，也正因为如此，python也会为你自动调用基类的<strong>init</strong>()，否则必须显式在子类的<strong>init</strong>()中调用基类<strong>init</strong>()）。<br>之后声明W3schoolItem中元素并使用Field定义。到此items.py就OK了。</p>\n<ul>\n<li>在pipelines.py中编写W3schoolPipeline实现对item的处理。<br>在其中主要完成数据的查重、丢弃，验证item中数据，将得到的item数据保存等工作。代码如下：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">import json  </div><div class=\"line\">import codecs    </div><div class=\"line\">class W3SchoolPipeline(object):  </div><div class=\"line\">    def __init__(self):  </div><div class=\"line\">\tself.file = codecs.open(<span class=\"string\">'w3school_data_utf8.json'</span>, <span class=\"string\">'wb'</span>, encoding=<span class=\"string\">'utf-8'</span>)  </div><div class=\"line\">  </div><div class=\"line\">    def process_item(self, item, spider):  </div><div class=\"line\">\tline = json.dumps(dict(item)) + <span class=\"string\">'\\n'</span>  </div><div class=\"line\">\t<span class=\"comment\"># print line  </span></div><div class=\"line\">\tself.file.write(line.decode(<span class=\"string\">\"unicode_escape\"</span>))  </div><div class=\"line\">\t<span class=\"built_in\">return</span> item</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>其中的process_item方法是必须调用的用来处理item，并且返回值必须为Item类的对象，或者是抛出DropItem异常。并且上述方法将得到的item实现解码，以便正常显示中文，最终保存到json文件中。</p>\n<p>注意：在编写完pipeline后，为了能够启动它，必须将其加入到ITEM_PIPLINES配置中，即在settings.py中加入下面一句：<br>ITEM_PIPELINES = {<br>    ‘w3school.pipelines.W3SchoolPipeline’:300<br>}  </p>\n<h1 id=\"编写爬虫\"><a href=\"#编写爬虫\" class=\"headerlink\" title=\"编写爬虫\"></a>编写爬虫</h1><p>爬虫编写是在spider/文件夹下编写w3cshool_spider.py。<br>先上整个程序在慢慢解释：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python  </span></div><div class=\"line\"><span class=\"comment\"># -*- coding:utf-8 -*-  </span></div><div class=\"line\">from scrapy.spiders import Spider  </div><div class=\"line\">from scrapy.selector import Selector  </div><div class=\"line\">from scrapy import <span class=\"built_in\">log</span>  </div><div class=\"line\"></div><div class=\"line\">from w3school.items import W3schoolItem  </div><div class=\"line\">class W3schoolSpider(Spider):  </div><div class=\"line\"><span class=\"string\">\"\"</span><span class=\"string\">\"爬取w3school标签\"</span><span class=\"string\">\"\"</span>  </div><div class=\"line\"><span class=\"comment\">#log.start(\"log\",loglevel='INFO')  </span></div><div class=\"line\">name = <span class=\"string\">\"w3school\"</span>  </div><div class=\"line\">allowed_domains = [<span class=\"string\">\"w3school.com.cn\"</span>]  </div><div class=\"line\">start_urls = [  </div><div class=\"line\"><span class=\"string\">\"http://www.w3school.com.cn/xml/xml_syntax.asp\"</span>  </div><div class=\"line\">]  </div><div class=\"line\"></div><div class=\"line\">def parse(self, response):  </div><div class=\"line\">sel = Selector(response)  </div><div class=\"line\">sites = sel.xpath(<span class=\"string\">'//div[@id=\"navsecond\"]/div[@id=\"course\"]/ul[1]/li'</span>)  </div><div class=\"line\">items = []  </div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> site <span class=\"keyword\">in</span> sites:  </div><div class=\"line\">    item = W3schoolItem()  </div><div class=\"line\"></div><div class=\"line\">    title = site.xpath(<span class=\"string\">'a/text()'</span>).extract()  </div><div class=\"line\">    link = site.xpath(<span class=\"string\">'a/@href'</span>).extract()  </div><div class=\"line\">    desc = site.xpath(<span class=\"string\">'a/@title'</span>).extract()  </div><div class=\"line\"></div><div class=\"line\">    item[<span class=\"string\">'title'</span>] = [t.encode(<span class=\"string\">'utf-8'</span>) <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> title]  </div><div class=\"line\">    item[<span class=\"string\">'link'</span>] = [l.encode(<span class=\"string\">'utf-8'</span>) <span class=\"keyword\">for</span> l <span class=\"keyword\">in</span> link]  </div><div class=\"line\">    item[<span class=\"string\">'desc'</span>] = [d.encode(<span class=\"string\">'utf-8'</span>) <span class=\"keyword\">for</span> d <span class=\"keyword\">in</span> desc]  </div><div class=\"line\">    items.append(item)  </div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">#记录  </span></div><div class=\"line\">    log.msg(<span class=\"string\">\"Appending item...\"</span>,level=<span class=\"string\">'INFO'</span>)  </div><div class=\"line\">    log.msg(<span class=\"string\">\"Append done.\"</span>,level=<span class=\"string\">'INFO'</span>)</div><div class=\"line\"><span class=\"built_in\">return</span> items</div></pre></td></tr></table></figure></p>\n<p>（1）需要注意的是编写的spider必须继承自scrapy的Spider类。<br>属性name即spider唯一名字，start_url可以理解为爬取入口。<br>（2）parse方法。<br>parse（）是对scrapy.Spider类的override。<br>（3）网页中的数据提取机制。<br>scrapy使用选择器Selector并通过XPath实现数据的提取。关于XPath 推荐w3school的教程。</p>\n<h1 id=\"匹配\"><a href=\"#匹配\" class=\"headerlink\" title=\"匹配\"></a>匹配</h1><ul>\n<li><ol>\n<li>sites = sel.xpath(‘//div[@id=”navsecond”]/div[@id=”course”]/ul[2]/li’)<br>以下是网页源代码，命令中<code>@id=&quot;navsecond&quot;</code>匹配第一个div，course匹配第二个div，ul匹配下一级<code>&lt;ul&gt;</code>,序号[2]表示第2个<code>&lt;ul&gt;</code>框中内容。</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;/div&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;div id=<span class=\"string\">\"navsecond\"</span>&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;div id=<span class=\"string\">\"course\"</span>&gt;&lt;h2&gt;XML 基础&lt;/h2&gt;</div><div class=\"line\">&lt;ul&gt;</div><div class=\"line\">&lt;li class=<span class=\"string\">\"currentLink\"</span>&gt;&lt;a href=<span class=\"string\">\"/xml/index.asp\"</span> title=<span class=\"string\">\"XML 教程\"</span>&gt;XML 教程&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_intro.asp\"</span> title=<span class=\"string\">\"XML 简介\"</span>&gt;XML 简介&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_usedfor.asp\"</span> title=<span class=\"string\">\"XML 的用途\"</span>&gt;XML 用途&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_tree.asp\"</span> title=<span class=\"string\">\"XML 树结构\"</span>&gt;XML 树结构&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_syntax.asp\"</span> title=<span class=\"string\">\"XML 语法规则\"</span>&gt;XML 语法&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_elements.asp\"</span> title=<span class=\"string\">\"XML 元素\"</span>&gt;XML 元素&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_attributes.asp\"</span> title=<span class=\"string\">\"XML 属性\"</span>&gt;XML 属性&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_dtd.asp\"</span> title=<span class=\"string\">\"XML 验证\"</span>&gt;XML 验证&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_validator.asp\"</span> title=<span class=\"string\">\"XML 验证器\"</span>&gt;XML 验证器&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_browsers.asp\"</span> title=<span class=\"string\">\"XML 浏览器支持\"</span>&gt;XML 浏览器&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_view.asp\"</span> title=<span class=\"string\">\"查看 XML 文件\"</span>&gt;XML 查看&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_display.asp\"</span> title=<span class=\"string\">\"使用 CSS 显示 XML\"</span>&gt;XML CSS&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_xsl.asp\"</span> title=<span class=\"string\">\"使用 XSLT 显示 XML\"</span>&gt;XML XSLT&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;/ul&gt;</div><div class=\"line\">&lt;h2&gt;XML JavaScript&lt;/h2&gt;</div><div class=\"line\">&lt;ul&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_http.asp\"</span> title=<span class=\"string\">\"XMLHttpRequest 对象\"</span>&gt;XML HTTP Request&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_parser.asp\"</span> title=<span class=\"string\">\"XML 解析器\"</span>&gt;XML 解析器&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_dom.asp\"</span> title=<span class=\"string\">\"XML DOM\"</span>&gt;XML DOM&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_to_html.asp\"</span> title=<span class=\"string\">\"XML to HTML\"</span>&gt;XML to HTML&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;li&gt;&lt;a href=<span class=\"string\">\"/xml/xml_applications.asp\"</span> title=<span class=\"string\">\"XML 应用程序\"</span>&gt;XML 应用程序&lt;/a&gt;&lt;/li&gt;</div><div class=\"line\">&lt;/ul&gt;</div><div class=\"line\">&lt;h2&gt;XML 高级&lt;/h2&gt;</div><div class=\"line\">&lt;ul&gt;</div><div class=\"line\">...</div></pre></td></tr></table></figure>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><p>[1]scrapy研究探索（二）——爬w3school:<a href=\"http://blog.csdn.net/u012150179/article/details/32911511\">http://blog.csdn.net/u012150179/article/details/32911511</a></p>\n"},{"title":"Install Ubuntu with the fucked GPU","date":"2016-08-21T08:01:07.000Z","_content":"<div align=\"center\">\n![jpg](/images/gpu-config/sxnet.jpg)\n</div>\n用台式机对MXNET 的Scala版本进行开发（项目名称为SXNET，还在开发过程中,暂且不提），带独立显卡GTX980，与ubuntu不是很兼容，安装带GPU的系统很麻烦，下面把具体过程记录如下：\n## 1.sudo apt-get install openssh-server（保证电脑在黑屏的情况下，可ssh）\n## 2.teamviewer(optional)\n`https://www.teamviewer.com/zhCN/download/linux/`\n## 3.下载jdk\n这一步是重中之重！\n1）添加JAVA_HOME路径：\nexport JAVA_HOME=/xxx/xxxx/jdk1.7.0_60\n该目录是你JDK解压后的目录，比如小编，解压后的目录为：\n/opt/software/java/jdk1.7.0_60\n所以小编的路径为：\nexport JAVA_HOME=/opt/software/java/jdk_1.7.0_60\n2)添加JRE路径\n小编的为：\nexport JRE_HOME=/opt/software/java/jdk_1.7.0_60/jre\n3)配置CLASSPATH路径\nexport CLASSPATH=.:$CLASSPATH:$JAVA_HOME/lib:$JRE_HOME/lib\n4）配置PATH路径\nexport PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\n## 4.装gpu后，电脑黑屏，用电脑A，ssh连接\n4.1 用ssh远程连接，控制电脑安装NVIDIA显卡驱动\n## 5. 进入界面，装cuda\nhttps://developer.nvidia.com/cuda-downloads\nhttp://www.open-open.com/lib/view/open1448030000650.html\n最后，在.bashrc中，设置环境变量cuda enviroment:\nexport PATH=$PATH:/usr/local/cuda/\n此时，在terminal中输入nvidia-smi命令，出现下图，说明安装cuda成功！\n![jpg](/images/gpu-config/cuda-shell.jpg)\n## 6. mxnet装依赖\nsudo apt-get update\nsudo apt-get install -y build-essential git libblas-dev libopencv-dev\nubuntu的atlas实现:\nsudo apt-get install libatlas-base-dev或者sudo apt-get install libopenblas-dev\n最后在根目录下进行make,生成动态链接库，供Scala调用。\n## 7. 配环境变量\n配置动态链接库，使得程序调用JNI接口的时候，能够准确找到动态链接库位置：\n`export LD_LIBRARY_PATH＝$LD_LIBRARY_PATH:/home/agen/mxnet/lib`\n至此，已经可以编译MXNET了，我用Scala开发，展示如下：\n![jpg](/images/gpu-config/environment.png)\n## 8.装opencv\n　　看官方文档靠谱些：\nhttp://docs.opencv.org/2.4/doc/tutorials/introduction/linux_install/linux_install.html#linux-installation\n　　make过程中如果出现：unsopported gpu architecture compute 11\n采用：http://blog.csdn.net/sysuwuhongpeng/article/details/45485719 \n　　opencv安装好后，在安装目录中找opencv.jar,Scala可以通过该jar文件，利用opencv对图像进行处理。\n \n## 9.python library配置\n* scikit-image        \n        http://scikit-image.org/docs/stable/install.html\n* hdf5:\n        sudo apt-get install libhdf5-dev\n         sudo pip install h5py\n* fuel:\n`pip install git+git://github.com/mila-udem/fuel.git@v0.0.1`\n`#environment`\n`export FUEL_DATA_PATH=/mnt/data`\n* blocks:\n`http://blocks.readthedocs.io/en/latest/setup.html`\n`pip install git+git://github.com/mila-udem/blocks.git@v0.0.1`\n* pandas:\n`pip install pandas`\n","source":"_posts/GPU-Config.md","raw":"---\ntitle: Install Ubuntu with the fucked GPU\ndate: 2016-08-21 16:01:07\ntags: work\n---\n<div align=\"center\">\n![jpg](/images/gpu-config/sxnet.jpg)\n</div>\n用台式机对MXNET 的Scala版本进行开发（项目名称为SXNET，还在开发过程中,暂且不提），带独立显卡GTX980，与ubuntu不是很兼容，安装带GPU的系统很麻烦，下面把具体过程记录如下：\n## 1.sudo apt-get install openssh-server（保证电脑在黑屏的情况下，可ssh）\n## 2.teamviewer(optional)\n`https://www.teamviewer.com/zhCN/download/linux/`\n## 3.下载jdk\n这一步是重中之重！\n1）添加JAVA_HOME路径：\nexport JAVA_HOME=/xxx/xxxx/jdk1.7.0_60\n该目录是你JDK解压后的目录，比如小编，解压后的目录为：\n/opt/software/java/jdk1.7.0_60\n所以小编的路径为：\nexport JAVA_HOME=/opt/software/java/jdk_1.7.0_60\n2)添加JRE路径\n小编的为：\nexport JRE_HOME=/opt/software/java/jdk_1.7.0_60/jre\n3)配置CLASSPATH路径\nexport CLASSPATH=.:$CLASSPATH:$JAVA_HOME/lib:$JRE_HOME/lib\n4）配置PATH路径\nexport PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\n## 4.装gpu后，电脑黑屏，用电脑A，ssh连接\n4.1 用ssh远程连接，控制电脑安装NVIDIA显卡驱动\n## 5. 进入界面，装cuda\nhttps://developer.nvidia.com/cuda-downloads\nhttp://www.open-open.com/lib/view/open1448030000650.html\n最后，在.bashrc中，设置环境变量cuda enviroment:\nexport PATH=$PATH:/usr/local/cuda/\n此时，在terminal中输入nvidia-smi命令，出现下图，说明安装cuda成功！\n![jpg](/images/gpu-config/cuda-shell.jpg)\n## 6. mxnet装依赖\nsudo apt-get update\nsudo apt-get install -y build-essential git libblas-dev libopencv-dev\nubuntu的atlas实现:\nsudo apt-get install libatlas-base-dev或者sudo apt-get install libopenblas-dev\n最后在根目录下进行make,生成动态链接库，供Scala调用。\n## 7. 配环境变量\n配置动态链接库，使得程序调用JNI接口的时候，能够准确找到动态链接库位置：\n`export LD_LIBRARY_PATH＝$LD_LIBRARY_PATH:/home/agen/mxnet/lib`\n至此，已经可以编译MXNET了，我用Scala开发，展示如下：\n![jpg](/images/gpu-config/environment.png)\n## 8.装opencv\n　　看官方文档靠谱些：\nhttp://docs.opencv.org/2.4/doc/tutorials/introduction/linux_install/linux_install.html#linux-installation\n　　make过程中如果出现：unsopported gpu architecture compute 11\n采用：http://blog.csdn.net/sysuwuhongpeng/article/details/45485719 \n　　opencv安装好后，在安装目录中找opencv.jar,Scala可以通过该jar文件，利用opencv对图像进行处理。\n \n## 9.python library配置\n* scikit-image        \n        http://scikit-image.org/docs/stable/install.html\n* hdf5:\n        sudo apt-get install libhdf5-dev\n         sudo pip install h5py\n* fuel:\n`pip install git+git://github.com/mila-udem/fuel.git@v0.0.1`\n`#environment`\n`export FUEL_DATA_PATH=/mnt/data`\n* blocks:\n`http://blocks.readthedocs.io/en/latest/setup.html`\n`pip install git+git://github.com/mila-udem/blocks.git@v0.0.1`\n* pandas:\n`pip install pandas`\n","slug":"GPU-Config","published":1,"updated":"2016-08-28T15:44:17.925Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisfi4lqz0005lzjqsjfrtfs2","content":"<p><div align=\"center\"><br><img src=\"/images/gpu-config/sxnet.jpg\" alt=\"jpg\"><br></div><br>用台式机对MXNET 的Scala版本进行开发（项目名称为SXNET，还在开发过程中,暂且不提），带独立显卡GTX980，与ubuntu不是很兼容，安装带GPU的系统很麻烦，下面把具体过程记录如下：</p>\n<h2 id=\"1-sudo-apt-get-install-openssh-server（保证电脑在黑屏的情况下，可ssh）\"><a href=\"#1-sudo-apt-get-install-openssh-server（保证电脑在黑屏的情况下，可ssh）\" class=\"headerlink\" title=\"1.sudo apt-get install openssh-server（保证电脑在黑屏的情况下，可ssh）\"></a>1.sudo apt-get install openssh-server（保证电脑在黑屏的情况下，可ssh）</h2><h2 id=\"2-teamviewer-optional\"><a href=\"#2-teamviewer-optional\" class=\"headerlink\" title=\"2.teamviewer(optional)\"></a>2.teamviewer(optional)</h2><p><code>https://www.teamviewer.com/zhCN/download/linux/</code></p>\n<h2 id=\"3-下载jdk\"><a href=\"#3-下载jdk\" class=\"headerlink\" title=\"3.下载jdk\"></a>3.下载jdk</h2><p>这一步是重中之重！<br>1）添加JAVA_HOME路径：<br>export JAVA_HOME=/xxx/xxxx/jdk1.7.0_60<br>该目录是你JDK解压后的目录，比如小编，解压后的目录为：<br>/opt/software/java/jdk1.7.0_60<br>所以小编的路径为：<br>export JAVA_HOME=/opt/software/java/jdk_1.7.0_60<br>2)添加JRE路径<br>小编的为：<br>export JRE_HOME=/opt/software/java/jdk_1.7.0_60/jre<br>3)配置CLASSPATH路径<br>export CLASSPATH=.:$CLASSPATH:$JAVA_HOME/lib:$JRE_HOME/lib<br>4）配置PATH路径<br>export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</p>\n<h2 id=\"4-装gpu后，电脑黑屏，用电脑A，ssh连接\"><a href=\"#4-装gpu后，电脑黑屏，用电脑A，ssh连接\" class=\"headerlink\" title=\"4.装gpu后，电脑黑屏，用电脑A，ssh连接\"></a>4.装gpu后，电脑黑屏，用电脑A，ssh连接</h2><p>4.1 用ssh远程连接，控制电脑安装NVIDIA显卡驱动</p>\n<h2 id=\"5-进入界面，装cuda\"><a href=\"#5-进入界面，装cuda\" class=\"headerlink\" title=\"5. 进入界面，装cuda\"></a>5. 进入界面，装cuda</h2><p><a href=\"https://developer.nvidia.com/cuda-downloads\" target=\"_blank\" rel=\"external\">https://developer.nvidia.com/cuda-downloads</a><br><a href=\"http://www.open-open.com/lib/view/open1448030000650.html\" target=\"_blank\" rel=\"external\">http://www.open-open.com/lib/view/open1448030000650.html</a><br>最后，在.bashrc中，设置环境变量cuda enviroment:<br>export PATH=$PATH:/usr/local/cuda/<br>此时，在terminal中输入nvidia-smi命令，出现下图，说明安装cuda成功！<br><img src=\"/images/gpu-config/cuda-shell.jpg\" alt=\"jpg\"></p>\n<h2 id=\"6-mxnet装依赖\"><a href=\"#6-mxnet装依赖\" class=\"headerlink\" title=\"6. mxnet装依赖\"></a>6. mxnet装依赖</h2><p>sudo apt-get update<br>sudo apt-get install -y build-essential git libblas-dev libopencv-dev<br>ubuntu的atlas实现:<br>sudo apt-get install libatlas-base-dev或者sudo apt-get install libopenblas-dev<br>最后在根目录下进行make,生成动态链接库，供Scala调用。</p>\n<h2 id=\"7-配环境变量\"><a href=\"#7-配环境变量\" class=\"headerlink\" title=\"7. 配环境变量\"></a>7. 配环境变量</h2><p>配置动态链接库，使得程序调用JNI接口的时候，能够准确找到动态链接库位置：<br><code>export LD_LIBRARY_PATH＝$LD_LIBRARY_PATH:/home/agen/mxnet/lib</code><br>至此，已经可以编译MXNET了，我用Scala开发，展示如下：<br><img src=\"/images/gpu-config/environment.png\" alt=\"jpg\"></p>\n<h2 id=\"8-装opencv\"><a href=\"#8-装opencv\" class=\"headerlink\" title=\"8.装opencv\"></a>8.装opencv</h2><p>　　看官方文档靠谱些：<br><a href=\"http://docs.opencv.org/2.4/doc/tutorials/introduction/linux_install/linux_install.html#linux-installation\" target=\"_blank\" rel=\"external\">http://docs.opencv.org/2.4/doc/tutorials/introduction/linux_install/linux_install.html#linux-installation</a><br>　　make过程中如果出现：unsopported gpu architecture compute 11<br>采用：<a href=\"http://blog.csdn.net/sysuwuhongpeng/article/details/45485719\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/sysuwuhongpeng/article/details/45485719</a><br>　　opencv安装好后，在安装目录中找opencv.jar,Scala可以通过该jar文件，利用opencv对图像进行处理。</p>\n<h2 id=\"9-python-library配置\"><a href=\"#9-python-library配置\" class=\"headerlink\" title=\"9.python library配置\"></a>9.python library配置</h2><ul>\n<li>scikit-image        <pre><code>http://scikit-image.org/docs/stable/install.html\n</code></pre></li>\n<li>hdf5:<pre><code>sudo apt-get install libhdf5-dev\n sudo pip install h5py\n</code></pre></li>\n<li>fuel:<br><code>pip install git+git://github.com/mila-udem/fuel.git@v0.0.1</code><br><code>#environment</code><br><code>export FUEL_DATA_PATH=/mnt/data</code></li>\n<li>blocks:<br><code>http://blocks.readthedocs.io/en/latest/setup.html</code><br><code>pip install git+git://github.com/mila-udem/blocks.git@v0.0.1</code></li>\n<li>pandas:<br><code>pip install pandas</code></li>\n</ul>\n","excerpt":"","more":"<p><div align=\"center\"><br><img src=\"/images/gpu-config/sxnet.jpg\" alt=\"jpg\"><br></div><br>用台式机对MXNET 的Scala版本进行开发（项目名称为SXNET，还在开发过程中,暂且不提），带独立显卡GTX980，与ubuntu不是很兼容，安装带GPU的系统很麻烦，下面把具体过程记录如下：</p>\n<h2 id=\"1-sudo-apt-get-install-openssh-server（保证电脑在黑屏的情况下，可ssh）\"><a href=\"#1-sudo-apt-get-install-openssh-server（保证电脑在黑屏的情况下，可ssh）\" class=\"headerlink\" title=\"1.sudo apt-get install openssh-server（保证电脑在黑屏的情况下，可ssh）\"></a>1.sudo apt-get install openssh-server（保证电脑在黑屏的情况下，可ssh）</h2><h2 id=\"2-teamviewer-optional\"><a href=\"#2-teamviewer-optional\" class=\"headerlink\" title=\"2.teamviewer(optional)\"></a>2.teamviewer(optional)</h2><p><code>https://www.teamviewer.com/zhCN/download/linux/</code></p>\n<h2 id=\"3-下载jdk\"><a href=\"#3-下载jdk\" class=\"headerlink\" title=\"3.下载jdk\"></a>3.下载jdk</h2><p>这一步是重中之重！<br>1）添加JAVA_HOME路径：<br>export JAVA_HOME=/xxx/xxxx/jdk1.7.0_60<br>该目录是你JDK解压后的目录，比如小编，解压后的目录为：<br>/opt/software/java/jdk1.7.0_60<br>所以小编的路径为：<br>export JAVA_HOME=/opt/software/java/jdk_1.7.0_60<br>2)添加JRE路径<br>小编的为：<br>export JRE_HOME=/opt/software/java/jdk_1.7.0_60/jre<br>3)配置CLASSPATH路径<br>export CLASSPATH=.:$CLASSPATH:$JAVA_HOME/lib:$JRE_HOME/lib<br>4）配置PATH路径<br>export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</p>\n<h2 id=\"4-装gpu后，电脑黑屏，用电脑A，ssh连接\"><a href=\"#4-装gpu后，电脑黑屏，用电脑A，ssh连接\" class=\"headerlink\" title=\"4.装gpu后，电脑黑屏，用电脑A，ssh连接\"></a>4.装gpu后，电脑黑屏，用电脑A，ssh连接</h2><p>4.1 用ssh远程连接，控制电脑安装NVIDIA显卡驱动</p>\n<h2 id=\"5-进入界面，装cuda\"><a href=\"#5-进入界面，装cuda\" class=\"headerlink\" title=\"5. 进入界面，装cuda\"></a>5. 进入界面，装cuda</h2><p><a href=\"https://developer.nvidia.com/cuda-downloads\">https://developer.nvidia.com/cuda-downloads</a><br><a href=\"http://www.open-open.com/lib/view/open1448030000650.html\">http://www.open-open.com/lib/view/open1448030000650.html</a><br>最后，在.bashrc中，设置环境变量cuda enviroment:<br>export PATH=$PATH:/usr/local/cuda/<br>此时，在terminal中输入nvidia-smi命令，出现下图，说明安装cuda成功！<br><img src=\"/images/gpu-config/cuda-shell.jpg\" alt=\"jpg\"></p>\n<h2 id=\"6-mxnet装依赖\"><a href=\"#6-mxnet装依赖\" class=\"headerlink\" title=\"6. mxnet装依赖\"></a>6. mxnet装依赖</h2><p>sudo apt-get update<br>sudo apt-get install -y build-essential git libblas-dev libopencv-dev<br>ubuntu的atlas实现:<br>sudo apt-get install libatlas-base-dev或者sudo apt-get install libopenblas-dev<br>最后在根目录下进行make,生成动态链接库，供Scala调用。</p>\n<h2 id=\"7-配环境变量\"><a href=\"#7-配环境变量\" class=\"headerlink\" title=\"7. 配环境变量\"></a>7. 配环境变量</h2><p>配置动态链接库，使得程序调用JNI接口的时候，能够准确找到动态链接库位置：<br><code>export LD_LIBRARY_PATH＝$LD_LIBRARY_PATH:/home/agen/mxnet/lib</code><br>至此，已经可以编译MXNET了，我用Scala开发，展示如下：<br><img src=\"/images/gpu-config/environment.png\" alt=\"jpg\"></p>\n<h2 id=\"8-装opencv\"><a href=\"#8-装opencv\" class=\"headerlink\" title=\"8.装opencv\"></a>8.装opencv</h2><p>　　看官方文档靠谱些：<br><a href=\"http://docs.opencv.org/2.4/doc/tutorials/introduction/linux_install/linux_install.html#linux-installation\">http://docs.opencv.org/2.4/doc/tutorials/introduction/linux_install/linux_install.html#linux-installation</a><br>　　make过程中如果出现：unsopported gpu architecture compute 11<br>采用：<a href=\"http://blog.csdn.net/sysuwuhongpeng/article/details/45485719\">http://blog.csdn.net/sysuwuhongpeng/article/details/45485719</a><br>　　opencv安装好后，在安装目录中找opencv.jar,Scala可以通过该jar文件，利用opencv对图像进行处理。</p>\n<h2 id=\"9-python-library配置\"><a href=\"#9-python-library配置\" class=\"headerlink\" title=\"9.python library配置\"></a>9.python library配置</h2><ul>\n<li>scikit-image        <pre><code>http://scikit-image.org/docs/stable/install.html\n</code></pre></li>\n<li>hdf5:<pre><code>sudo apt-get install libhdf5-dev\n sudo pip install h5py\n</code></pre></li>\n<li>fuel:<br><code>pip install git+git://github.com/mila-udem/fuel.git@v0.0.1</code><br><code>#environment</code><br><code>export FUEL_DATA_PATH=/mnt/data</code></li>\n<li>blocks:<br><code>http://blocks.readthedocs.io/en/latest/setup.html</code><br><code>pip install git+git://github.com/mila-udem/blocks.git@v0.0.1</code></li>\n<li>pandas:<br><code>pip install pandas</code></li>\n</ul>\n"},{"title":"Git Tutorial","date":"2016-08-29T02:46:02.000Z","_content":"\n# base\n1.生成公钥\n`ssh-keygen`\n将.ssh下的isa-pub复制到github上即可\n2.验证是否匹配：\n`ssh git@github.com`\n如果匹配，则出现以下信息：\n> Hi CitronMan! You've successfully authenticated, but GitHub does not provide shell access.\n> Connection to github.com closed.\n\n如果报错，如：\n> Agent admitted failure to sign using the key.\nYou should be able to fix this error by loading your keys into your SSH agent with ssh-add[]:\n`ssh-add`\n\n\n\n","source":"_posts/Git-Tutorial.md","raw":"---\ntitle: Git Tutorial\ndate: 2016-08-29 10:46:02\ntags: work\n---\n\n# base\n1.生成公钥\n`ssh-keygen`\n将.ssh下的isa-pub复制到github上即可\n2.验证是否匹配：\n`ssh git@github.com`\n如果匹配，则出现以下信息：\n> Hi CitronMan! You've successfully authenticated, but GitHub does not provide shell access.\n> Connection to github.com closed.\n\n如果报错，如：\n> Agent admitted failure to sign using the key.\nYou should be able to fix this error by loading your keys into your SSH agent with ssh-add[]:\n`ssh-add`\n\n\n\n","slug":"Git-Tutorial","published":1,"updated":"2016-08-29T03:00:30.329Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisfi4lr40007lzjqyi52nvzx","content":"<h1 id=\"base\"><a href=\"#base\" class=\"headerlink\" title=\"base\"></a>base</h1><p>1.生成公钥<br><code>ssh-keygen</code><br>将.ssh下的isa-pub复制到github上即可<br>2.验证是否匹配：<br><code>ssh git@github.com</code><br>如果匹配，则出现以下信息：</p>\n<blockquote>\n<p>Hi CitronMan! You’ve successfully authenticated, but GitHub does not provide shell access.<br>Connection to github.com closed.</p>\n</blockquote>\n<p>如果报错，如：</p>\n<blockquote>\n<p>Agent admitted failure to sign using the key.<br>You should be able to fix this error by loading your keys into your SSH agent with ssh-add[]:<br><code>ssh-add</code></p>\n</blockquote>\n","excerpt":"","more":"<h1 id=\"base\"><a href=\"#base\" class=\"headerlink\" title=\"base\"></a>base</h1><p>1.生成公钥<br><code>ssh-keygen</code><br>将.ssh下的isa-pub复制到github上即可<br>2.验证是否匹配：<br><code>ssh git@github.com</code><br>如果匹配，则出现以下信息：</p>\n<blockquote>\n<p>Hi CitronMan! You’ve successfully authenticated, but GitHub does not provide shell access.<br>Connection to github.com closed.</p>\n</blockquote>\n<p>如果报错，如：</p>\n<blockquote>\n<p>Agent admitted failure to sign using the key.<br>You should be able to fix this error by loading your keys into your SSH agent with ssh-add[]:<br><code>ssh-add</code></p>\n</blockquote>\n"},{"title":"Github+Hexo Tutorial","date":"2016-07-21T14:51:37.000Z","_content":"\n![](/images/markdown_cover.jpg)\n# Environment\n* Ubuntu 14.04 LTS\n# Setup\n***\n* 1.安装Node.js\n`sudo add-apt-repository ppa:chris-lea/node.js`\n`sudo apt-get update`\n`sudo apt-get install nodejs`\n* 2.安装Git\n`sudo apt-get install git`\n* 3.安装hexo\n\t\tsudo npm install hexo -g\n\t\t npm install hexo-cli -g\n初始你博客的根目录（或者cd到指定目录下，然后执行hexo init）\n\t\thexo init <dir> \n* 4.让博客可以发布到git（参考连接：https://hexo.io/docs/deployment.html）\n（1）安装hexo-deployer-git（不然会出现ERROR Deployer not found: git）\n`npm install hexo-deployer-git --save`\n（2） 配置你hexo博客根目录下的_config.yml文件(应该是最下面一行，修改成你的github)\n\t\t# Deployment\n\t\t ## Docs: http://hexo.io/docs/deployment.html\n\t\t deploy:\n\t\t type: git\n\t\t repo: git@github.com:ClaymanTwinkle/ClaymanTwinkle.github.io.git\n\t\t branch: master\n\n* 5.hexo常用命令\n创建页面  ：hexo new post \"文章名字（可以是中文）\"\n生成html  ： hexo generate（或者hexo g）\n发布到git ： hexo deploy\n生成并发布：hexo generate -d （或者hexo g -d）\n\n# 报错\nNPM安装时提示...due to the use of legacy binary node解决方法\n使用npm安装hexo，提示：\n\t\t\n\t\tnpm WARN This failure might be due to the use of legacy binary \"node\"\n\t\t npm WARN For further explanations, please read /usr/share/doc/nodejs/README.Debian\n\t\t sudo apt-get install nodejs-legacy\n\n# Quick Start\n## Create a new post\n``` bash\n$ hexo new \"My New Post\"\n```\nMore info: [Writing](https://hexo.io/docs/writing.html)\n## Run server\n``` bash\n$ hexo server (or hexo s)\n```\nMore info: [Server](https://hexo.io/docs/server.html)\n## Generate static files\n``` bash\n$ hexo generate (or hexo g)\n```\nMore info: [Generating](https://hexo.io/docs/generating.html)\n## Deploy to remote sites\n``` bash\n$ hexo deploy\n```\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n# markdown 语法\n* **基本符号**\n*,-,+ 3个符号效果都一样，这3个符号被称为 Markdown符号 \n**加粗**: \\*\\*xxx\\*\\* (死活打印不出两个\\*,见谅)、_斜体_ : \\_xxx\\_ 、 ~~删除线~~: \\~\\~xxx\\~\\~\n* 空白行表示另起一个段落\n* `是表示inline代码，tab是用来标记 代码段，分别对应html的code，pre标签\n* **换行**\n单一段落 用一个空白行\n连续两个空格 会变成一个 [换行符]\n连续3个符号，然后是空行，表示 hr横线\n* **标题**\n生成h1--h6,在文字前面加上 1--6个# 来实现\n文字加粗是通过 文字左右各两个符号\n* **引用**\n在第一行加上 “>”和一个空格，表示代码引用，还可以嵌套\n* **列表**\n这个是markdown文件的主要表示方式，主题要点化\n使用*,+,-加上一个空格来表示\n可以支持嵌套\n有序列表用 数字+英文点+空格来表示\n列表内容很长，不需要手工输入换行符，css控制段落的宽度，会自动的缩放的\n\n| ABCD | EFGH | IJKL |\n| -----|:----:|----:|\n| a    | b    | c    |\n| d    | e    | f    |\n| g    | h    | i    |\n\n* **公式**\n待补充\n\\!\\[\\]\\(http://latex.codecogs.com/gif.latex?\\prod(n_{i_y})+1)\n\\!\\[\\]\\(http://latex.codecogs.com/gif.latex?\\prod(n_{x}) +1)\n`<img src=\"http://latex.codecogs.com/gif.latex?\\prod(n_{i_x})+1\">`\n示例：\n![](http://latex.codecogs.com/gif.latex?\\prod(n_{i_y})+1)\n![](http://latex.codecogs.com/gif.latex?\\prod(n_x)+1)\n<img src=\"http://latex.codecogs.com/gif.latex?\\prod(n_{i_x})+1\">\n* **链接**\n示例[我的主页](https://citronman.github.io/) : \\[我的主页\\]\\(https://citronman.github.io/)\n引用 先定义 [ref_name]:url，然后在需要写入url的地方， 这样使用[锚文本][ref_name]，通常的ref_name一般用数字表示，这样显得专业\n简写url：用尖括号包裹url \n这样生成的url锚文本就是url本身\n* **图片**\n示例:<br>　![alt_text](/images/markdown_pic.jpg)\n一行表示: `![alt_text](/images/markdown_pic.jpg)`\n引用表示法: ![alt_text][id],预先定义 [id]:url \"可选title\"\n直接使用<img>标签，这样可以指定图片的大小尺寸\n* **特殊符号**\n用\\来转义，表示文本中的markdown符号\n可以在文本种直接使用html标签，但是要注意在使用的时候，前后加上空行\n文本前后各加一个符号，表示斜体\n* **注释**\n<\\!\\-\\-本行你应该假装看不见 \\-\\->\n* **内嵌HTML**\n<font color=red size=2 face=\"黑体\"><\\font color=red size=2 face=\"黑体\"\\></font>\n换行：`<br>`\n\n# 进阶语法\n* 1.设置图片大小，居中\n方法一：使用支持图片大小更改操作的 Mou 编辑器\n使用如下语法\n`![](./pic/pic1_50.png =100x100)`\n注意: =前有个空格，可以只写宽度。\n方法二：嵌入HTML代码\n使用img标签\n`<img src=\"./xxx.png\" width = \"300\" height = \"200\" alt=\"图片名称\" align=center />`\n附：如果需要居中的话只要在外面包围div标签即可,但要注意在前后各**留一行空白**，否则会破坏格式\n``` bash\n<div  align=\"center\">    \n...\n</div>\n```\n* 2.缩进控制\n切换到全角字符，敲两下空格。\n\n* 3.加入图标\n<i class=\"icon-list\"></i> 目录<i class=\"icon-list\"></i>：快速导航当前文稿的目录结构以跳转到感兴趣的段落\n<i class=\"icon-info\"></i> 视图：互换左边编辑区和右边预览区的位置\n<i class=\"icon-user\"></i> 主题：内置了黑白两种模式的主题，试试 **黑色主题**，超炫！\n```html\n<i class=\"icon-list\"></i>\n```\n\n* 4.复选框\n**hexo 不支持！！！！**\n\n# reference\nHexo官网资料 ： https://hexo.io/docs/\nHexo中文网站 ： http://wiki.jikexueyuan.com/project/hexo-document/\nZippera blog : http://wiki.jikexueyuan.com/project/hexo-document/\n老蒋部落     ： http://www.itbulu.com/centos-git-nodejs-hexo.html\n主题Yilia    : http://litten.github.io/2014/08/31/hexo-theme-yilia/\nThemes: https://github.com/hexojs/hexo/wiki/Themes#\n知乎郑宇：https://www.zhihu.com/question/23378396\n在线markdown编辑器：https://www.zybuluo.com/mdeditor\n\n","source":"_posts/Github+Hexo Tutorial.md","raw":"---\ntitle: Github+Hexo Tutorial\ndate: 2016-07-21 22:51:37\ntags: work\n---\n\n![](/images/markdown_cover.jpg)\n# Environment\n* Ubuntu 14.04 LTS\n# Setup\n***\n* 1.安装Node.js\n`sudo add-apt-repository ppa:chris-lea/node.js`\n`sudo apt-get update`\n`sudo apt-get install nodejs`\n* 2.安装Git\n`sudo apt-get install git`\n* 3.安装hexo\n\t\tsudo npm install hexo -g\n\t\t npm install hexo-cli -g\n初始你博客的根目录（或者cd到指定目录下，然后执行hexo init）\n\t\thexo init <dir> \n* 4.让博客可以发布到git（参考连接：https://hexo.io/docs/deployment.html）\n（1）安装hexo-deployer-git（不然会出现ERROR Deployer not found: git）\n`npm install hexo-deployer-git --save`\n（2） 配置你hexo博客根目录下的_config.yml文件(应该是最下面一行，修改成你的github)\n\t\t# Deployment\n\t\t ## Docs: http://hexo.io/docs/deployment.html\n\t\t deploy:\n\t\t type: git\n\t\t repo: git@github.com:ClaymanTwinkle/ClaymanTwinkle.github.io.git\n\t\t branch: master\n\n* 5.hexo常用命令\n创建页面  ：hexo new post \"文章名字（可以是中文）\"\n生成html  ： hexo generate（或者hexo g）\n发布到git ： hexo deploy\n生成并发布：hexo generate -d （或者hexo g -d）\n\n# 报错\nNPM安装时提示...due to the use of legacy binary node解决方法\n使用npm安装hexo，提示：\n\t\t\n\t\tnpm WARN This failure might be due to the use of legacy binary \"node\"\n\t\t npm WARN For further explanations, please read /usr/share/doc/nodejs/README.Debian\n\t\t sudo apt-get install nodejs-legacy\n\n# Quick Start\n## Create a new post\n``` bash\n$ hexo new \"My New Post\"\n```\nMore info: [Writing](https://hexo.io/docs/writing.html)\n## Run server\n``` bash\n$ hexo server (or hexo s)\n```\nMore info: [Server](https://hexo.io/docs/server.html)\n## Generate static files\n``` bash\n$ hexo generate (or hexo g)\n```\nMore info: [Generating](https://hexo.io/docs/generating.html)\n## Deploy to remote sites\n``` bash\n$ hexo deploy\n```\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n# markdown 语法\n* **基本符号**\n*,-,+ 3个符号效果都一样，这3个符号被称为 Markdown符号 \n**加粗**: \\*\\*xxx\\*\\* (死活打印不出两个\\*,见谅)、_斜体_ : \\_xxx\\_ 、 ~~删除线~~: \\~\\~xxx\\~\\~\n* 空白行表示另起一个段落\n* `是表示inline代码，tab是用来标记 代码段，分别对应html的code，pre标签\n* **换行**\n单一段落 用一个空白行\n连续两个空格 会变成一个 [换行符]\n连续3个符号，然后是空行，表示 hr横线\n* **标题**\n生成h1--h6,在文字前面加上 1--6个# 来实现\n文字加粗是通过 文字左右各两个符号\n* **引用**\n在第一行加上 “>”和一个空格，表示代码引用，还可以嵌套\n* **列表**\n这个是markdown文件的主要表示方式，主题要点化\n使用*,+,-加上一个空格来表示\n可以支持嵌套\n有序列表用 数字+英文点+空格来表示\n列表内容很长，不需要手工输入换行符，css控制段落的宽度，会自动的缩放的\n\n| ABCD | EFGH | IJKL |\n| -----|:----:|----:|\n| a    | b    | c    |\n| d    | e    | f    |\n| g    | h    | i    |\n\n* **公式**\n待补充\n\\!\\[\\]\\(http://latex.codecogs.com/gif.latex?\\prod(n_{i_y})+1)\n\\!\\[\\]\\(http://latex.codecogs.com/gif.latex?\\prod(n_{x}) +1)\n`<img src=\"http://latex.codecogs.com/gif.latex?\\prod(n_{i_x})+1\">`\n示例：\n![](http://latex.codecogs.com/gif.latex?\\prod(n_{i_y})+1)\n![](http://latex.codecogs.com/gif.latex?\\prod(n_x)+1)\n<img src=\"http://latex.codecogs.com/gif.latex?\\prod(n_{i_x})+1\">\n* **链接**\n示例[我的主页](https://citronman.github.io/) : \\[我的主页\\]\\(https://citronman.github.io/)\n引用 先定义 [ref_name]:url，然后在需要写入url的地方， 这样使用[锚文本][ref_name]，通常的ref_name一般用数字表示，这样显得专业\n简写url：用尖括号包裹url \n这样生成的url锚文本就是url本身\n* **图片**\n示例:<br>　![alt_text](/images/markdown_pic.jpg)\n一行表示: `![alt_text](/images/markdown_pic.jpg)`\n引用表示法: ![alt_text][id],预先定义 [id]:url \"可选title\"\n直接使用<img>标签，这样可以指定图片的大小尺寸\n* **特殊符号**\n用\\来转义，表示文本中的markdown符号\n可以在文本种直接使用html标签，但是要注意在使用的时候，前后加上空行\n文本前后各加一个符号，表示斜体\n* **注释**\n<\\!\\-\\-本行你应该假装看不见 \\-\\->\n* **内嵌HTML**\n<font color=red size=2 face=\"黑体\"><\\font color=red size=2 face=\"黑体\"\\></font>\n换行：`<br>`\n\n# 进阶语法\n* 1.设置图片大小，居中\n方法一：使用支持图片大小更改操作的 Mou 编辑器\n使用如下语法\n`![](./pic/pic1_50.png =100x100)`\n注意: =前有个空格，可以只写宽度。\n方法二：嵌入HTML代码\n使用img标签\n`<img src=\"./xxx.png\" width = \"300\" height = \"200\" alt=\"图片名称\" align=center />`\n附：如果需要居中的话只要在外面包围div标签即可,但要注意在前后各**留一行空白**，否则会破坏格式\n``` bash\n<div  align=\"center\">    \n...\n</div>\n```\n* 2.缩进控制\n切换到全角字符，敲两下空格。\n\n* 3.加入图标\n<i class=\"icon-list\"></i> 目录<i class=\"icon-list\"></i>：快速导航当前文稿的目录结构以跳转到感兴趣的段落\n<i class=\"icon-info\"></i> 视图：互换左边编辑区和右边预览区的位置\n<i class=\"icon-user\"></i> 主题：内置了黑白两种模式的主题，试试 **黑色主题**，超炫！\n```html\n<i class=\"icon-list\"></i>\n```\n\n* 4.复选框\n**hexo 不支持！！！！**\n\n# reference\nHexo官网资料 ： https://hexo.io/docs/\nHexo中文网站 ： http://wiki.jikexueyuan.com/project/hexo-document/\nZippera blog : http://wiki.jikexueyuan.com/project/hexo-document/\n老蒋部落     ： http://www.itbulu.com/centos-git-nodejs-hexo.html\n主题Yilia    : http://litten.github.io/2014/08/31/hexo-theme-yilia/\nThemes: https://github.com/hexojs/hexo/wiki/Themes#\n知乎郑宇：https://www.zhihu.com/question/23378396\n在线markdown编辑器：https://www.zybuluo.com/mdeditor\n\n","slug":"Github+Hexo Tutorial","published":1,"updated":"2016-08-29T03:32:51.121Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisfi4lr90009lzjqcauv2e6n","content":"<p><img src=\"/images/markdown_cover.jpg\" alt=\"\"></p>\n<h1 id=\"Environment\"><a href=\"#Environment\" class=\"headerlink\" title=\"Environment\"></a>Environment</h1><ul>\n<li>Ubuntu 14.04 LTS<h1 id=\"Setup\"><a href=\"#Setup\" class=\"headerlink\" title=\"Setup\"></a>Setup</h1></li>\n</ul>\n<hr>\n<ul>\n<li>1.安装Node.js<br><code>sudo add-apt-repository ppa:chris-lea/node.js</code><br><code>sudo apt-get update</code><br><code>sudo apt-get install nodejs</code></li>\n<li>2.安装Git<br><code>sudo apt-get install git</code></li>\n<li>3.安装hexo<pre><code>sudo npm install hexo -g\n npm install hexo-cli -g\n</code></pre>初始你博客的根目录（或者cd到指定目录下，然后执行hexo init）<pre><code>hexo init &lt;dir&gt; \n</code></pre></li>\n<li><p>4.让博客可以发布到git（参考连接：<a href=\"https://hexo.io/docs/deployment.html）\" target=\"_blank\" rel=\"external\">https://hexo.io/docs/deployment.html）</a><br>（1）安装hexo-deployer-git（不然会出现ERROR Deployer not found: git）<br><code>npm install hexo-deployer-git --save</code><br>（2） 配置你hexo博客根目录下的_config.yml文件(应该是最下面一行，修改成你的github)</p>\n<pre><code># Deployment\n ## Docs: http://hexo.io/docs/deployment.html\n deploy:\n type: git\n repo: git@github.com:ClaymanTwinkle/ClaymanTwinkle.github.io.git\n branch: master\n</code></pre></li>\n<li><p>5.hexo常用命令<br>创建页面  ：hexo new post “文章名字（可以是中文）”<br>生成html  ： hexo generate（或者hexo g）<br>发布到git ： hexo deploy<br>生成并发布：hexo generate -d （或者hexo g -d）</p>\n</li>\n</ul>\n<h1 id=\"报错\"><a href=\"#报错\" class=\"headerlink\" title=\"报错\"></a>报错</h1><p>NPM安装时提示…due to the use of legacy binary node解决方法<br>使用npm安装hexo，提示：</p>\n<pre><code>npm WARN This failure might be due to the use of legacy binary &quot;node&quot;\n npm WARN For further explanations, please read /usr/share/doc/nodejs/README.Debian\n sudo apt-get install nodejs-legacy\n</code></pre><h1 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h1><h2 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h2 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server (or hexo s)</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h2 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate (or hexo g)</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h2 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n<h1 id=\"markdown-语法\"><a href=\"#markdown-语法\" class=\"headerlink\" title=\"markdown 语法\"></a>markdown 语法</h1><ul>\n<li><strong>基本符号</strong><br><em>,-,+ 3个符号效果都一样，这3个符号被称为 Markdown符号<br><strong>加粗</strong>: \\</em>*xxx** (死活打印不出两个*,见谅)、<em>斜体</em> : _xxx_ 、 <del>删除线</del>: ~~xxx~~</li>\n<li>空白行表示另起一个段落</li>\n<li>`是表示inline代码，tab是用来标记 代码段，分别对应html的code，pre标签</li>\n<li><strong>换行</strong><br>单一段落 用一个空白行<br>连续两个空格 会变成一个 [换行符]<br>连续3个符号，然后是空行，表示 hr横线</li>\n<li><strong>标题</strong><br>生成h1–h6,在文字前面加上 1–6个# 来实现<br>文字加粗是通过 文字左右各两个符号</li>\n<li><strong>引用</strong><br>在第一行加上 “&gt;”和一个空格，表示代码引用，还可以嵌套</li>\n<li><strong>列表</strong><br>这个是markdown文件的主要表示方式，主题要点化<br>使用*,+,-加上一个空格来表示<br>可以支持嵌套<br>有序列表用 数字+英文点+空格来表示<br>列表内容很长，不需要手工输入换行符，css控制段落的宽度，会自动的缩放的</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>ABCD</th>\n<th style=\"text-align:center\">EFGH</th>\n<th style=\"text-align:right\">IJKL</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>a</td>\n<td style=\"text-align:center\">b</td>\n<td style=\"text-align:right\">c</td>\n</tr>\n<tr>\n<td>d</td>\n<td style=\"text-align:center\">e</td>\n<td style=\"text-align:right\">f</td>\n</tr>\n<tr>\n<td>g</td>\n<td style=\"text-align:center\">h</td>\n<td style=\"text-align:right\">i</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><strong>公式</strong><br>待补充<br>![](<a href=\"http://latex.codecogs.com/gif.latex?\\prod(n_{i_y})+1\" target=\"_blank\" rel=\"external\">http://latex.codecogs.com/gif.latex?\\prod(n_{i_y})+1</a>)<br>![](<a href=\"http://latex.codecogs.com/gif.latex?\\prod(n_{x}\" target=\"_blank\" rel=\"external\">http://latex.codecogs.com/gif.latex?\\prod(n_{x}</a>) +1)<br><code>&lt;img src=&quot;http://latex.codecogs.com/gif.latex?\\prod(n_{i_x})+1&quot;&gt;</code><br>示例：<br><img src=\"http://latex.codecogs.com/gif.latex?\\prod(n_{i_y}\" alt=\"\">+1)<br><img src=\"http://latex.codecogs.com/gif.latex?\\prod(n_x\" alt=\"\">+1)<br><img src=\"http://latex.codecogs.com/gif.latex?\\prod(n_{i_x})+1\"></li>\n<li><strong>链接</strong><br>示例<a href=\"https://citronman.github.io/\" target=\"_blank\" rel=\"external\">我的主页</a> : [我的主页](<a href=\"https://citronman.github.io/\" target=\"_blank\" rel=\"external\">https://citronman.github.io/</a>)<br>引用 先定义 [ref_name]:url，然后在需要写入url的地方， 这样使用[锚文本][ref_name]，通常的ref_name一般用数字表示，这样显得专业<br>简写url：用尖括号包裹url<br>这样生成的url锚文本就是url本身</li>\n<li><strong>图片</strong><br>示例:<br>　<img src=\"/images/markdown_pic.jpg\" alt=\"alt_text\"><br>一行表示: <code>![alt_text](/images/markdown_pic.jpg)</code><br>引用表示法: ![alt_text][id],预先定义 [id]:url “可选title”<br>直接使用<img>标签，这样可以指定图片的大小尺寸</li>\n<li><strong>特殊符号</strong><br>用\\来转义，表示文本中的markdown符号<br>可以在文本种直接使用html标签，但是要注意在使用的时候，前后加上空行<br>文本前后各加一个符号，表示斜体</li>\n<li><strong>注释</strong><br>&lt;!--本行你应该假装看不见 --&gt;</li>\n<li><strong>内嵌HTML</strong><br><font color=\"red\" size=\"2\" face=\"黑体\">&lt;\\font color=red size=2 face=”黑体”></font><br>换行：<code>&lt;br&gt;</code></li>\n</ul>\n<h1 id=\"进阶语法\"><a href=\"#进阶语法\" class=\"headerlink\" title=\"进阶语法\"></a>进阶语法</h1><ul>\n<li><p>1.设置图片大小，居中<br>方法一：使用支持图片大小更改操作的 Mou 编辑器<br>使用如下语法<br><code>![](./pic/pic1_50.png =100x100)</code><br>注意: =前有个空格，可以只写宽度。<br>方法二：嵌入HTML代码<br>使用img标签<br><code>&lt;img src=&quot;./xxx.png&quot; width = &quot;300&quot; height = &quot;200&quot; alt=&quot;图片名称&quot; align=center /&gt;</code><br>附：如果需要居中的话只要在外面包围div标签即可,但要注意在前后各<strong>留一行空白</strong>，否则会破坏格式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div  align=<span class=\"string\">\"center\"</span>&gt;    </div><div class=\"line\">...</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>2.缩进控制<br>切换到全角字符，敲两下空格。</p>\n</li>\n<li><p>3.加入图标<br><i class=\"icon-list\"></i> 目录<i class=\"icon-list\"></i>：快速导航当前文稿的目录结构以跳转到感兴趣的段落<br><i class=\"icon-info\"></i> 视图：互换左边编辑区和右边预览区的位置<br><i class=\"icon-user\"></i> 主题：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon-list\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>4.复选框<br><strong>hexo 不支持！！！！</strong></p>\n</li>\n</ul>\n<h1 id=\"reference\"><a href=\"#reference\" class=\"headerlink\" title=\"reference\"></a>reference</h1><p>Hexo官网资料 ： <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">https://hexo.io/docs/</a><br>Hexo中文网站 ： <a href=\"http://wiki.jikexueyuan.com/project/hexo-document/\" target=\"_blank\" rel=\"external\">http://wiki.jikexueyuan.com/project/hexo-document/</a><br>Zippera blog : <a href=\"http://wiki.jikexueyuan.com/project/hexo-document/\" target=\"_blank\" rel=\"external\">http://wiki.jikexueyuan.com/project/hexo-document/</a><br>老蒋部落     ： <a href=\"http://www.itbulu.com/centos-git-nodejs-hexo.html\" target=\"_blank\" rel=\"external\">http://www.itbulu.com/centos-git-nodejs-hexo.html</a><br>主题Yilia    : <a href=\"http://litten.github.io/2014/08/31/hexo-theme-yilia/\" target=\"_blank\" rel=\"external\">http://litten.github.io/2014/08/31/hexo-theme-yilia/</a><br>Themes: <a href=\"https://github.com/hexojs/hexo/wiki/Themes#\" target=\"_blank\" rel=\"external\">https://github.com/hexojs/hexo/wiki/Themes#</a><br>知乎郑宇：<a href=\"https://www.zhihu.com/question/23378396\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/23378396</a><br>在线markdown编辑器：<a href=\"https://www.zybuluo.com/mdeditor\" target=\"_blank\" rel=\"external\">https://www.zybuluo.com/mdeditor</a></p>\n","excerpt":"","more":"<p><img src=\"/images/markdown_cover.jpg\" alt=\"\"></p>\n<h1 id=\"Environment\"><a href=\"#Environment\" class=\"headerlink\" title=\"Environment\"></a>Environment</h1><ul>\n<li>Ubuntu 14.04 LTS<h1 id=\"Setup\"><a href=\"#Setup\" class=\"headerlink\" title=\"Setup\"></a>Setup</h1></li>\n</ul>\n<hr>\n<ul>\n<li>1.安装Node.js<br><code>sudo add-apt-repository ppa:chris-lea/node.js</code><br><code>sudo apt-get update</code><br><code>sudo apt-get install nodejs</code></li>\n<li>2.安装Git<br><code>sudo apt-get install git</code></li>\n<li>3.安装hexo<pre><code>sudo npm install hexo -g\n npm install hexo-cli -g\n</code></pre>初始你博客的根目录（或者cd到指定目录下，然后执行hexo init）<pre><code>hexo init &lt;dir&gt; \n</code></pre></li>\n<li><p>4.让博客可以发布到git（参考连接：<a href=\"https://hexo.io/docs/deployment.html）\">https://hexo.io/docs/deployment.html）</a><br>（1）安装hexo-deployer-git（不然会出现ERROR Deployer not found: git）<br><code>npm install hexo-deployer-git --save</code><br>（2） 配置你hexo博客根目录下的_config.yml文件(应该是最下面一行，修改成你的github)</p>\n<pre><code># Deployment\n ## Docs: http://hexo.io/docs/deployment.html\n deploy:\n type: git\n repo: git@github.com:ClaymanTwinkle/ClaymanTwinkle.github.io.git\n branch: master\n</code></pre></li>\n<li><p>5.hexo常用命令<br>创建页面  ：hexo new post “文章名字（可以是中文）”<br>生成html  ： hexo generate（或者hexo g）<br>发布到git ： hexo deploy<br>生成并发布：hexo generate -d （或者hexo g -d）</p>\n</li>\n</ul>\n<h1 id=\"报错\"><a href=\"#报错\" class=\"headerlink\" title=\"报错\"></a>报错</h1><p>NPM安装时提示…due to the use of legacy binary node解决方法<br>使用npm安装hexo，提示：</p>\n<pre><code>npm WARN This failure might be due to the use of legacy binary &quot;node&quot;\n npm WARN For further explanations, please read /usr/share/doc/nodejs/README.Debian\n sudo apt-get install nodejs-legacy\n</code></pre><h1 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h1><h2 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h2 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server (or hexo s)</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h2 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate (or hexo g)</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h2 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n<h1 id=\"markdown-语法\"><a href=\"#markdown-语法\" class=\"headerlink\" title=\"markdown 语法\"></a>markdown 语法</h1><ul>\n<li><strong>基本符号</strong><br><em>,-,+ 3个符号效果都一样，这3个符号被称为 Markdown符号<br><strong>加粗</strong>: \\</em>*xxx** (死活打印不出两个*,见谅)、<em>斜体</em> : _xxx_ 、 <del>删除线</del>: ~~xxx~~</li>\n<li>空白行表示另起一个段落</li>\n<li>`是表示inline代码，tab是用来标记 代码段，分别对应html的code，pre标签</li>\n<li><strong>换行</strong><br>单一段落 用一个空白行<br>连续两个空格 会变成一个 [换行符]<br>连续3个符号，然后是空行，表示 hr横线</li>\n<li><strong>标题</strong><br>生成h1–h6,在文字前面加上 1–6个# 来实现<br>文字加粗是通过 文字左右各两个符号</li>\n<li><strong>引用</strong><br>在第一行加上 “&gt;”和一个空格，表示代码引用，还可以嵌套</li>\n<li><strong>列表</strong><br>这个是markdown文件的主要表示方式，主题要点化<br>使用*,+,-加上一个空格来表示<br>可以支持嵌套<br>有序列表用 数字+英文点+空格来表示<br>列表内容很长，不需要手工输入换行符，css控制段落的宽度，会自动的缩放的</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>ABCD</th>\n<th style=\"text-align:center\">EFGH</th>\n<th style=\"text-align:right\">IJKL</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>a</td>\n<td style=\"text-align:center\">b</td>\n<td style=\"text-align:right\">c</td>\n</tr>\n<tr>\n<td>d</td>\n<td style=\"text-align:center\">e</td>\n<td style=\"text-align:right\">f</td>\n</tr>\n<tr>\n<td>g</td>\n<td style=\"text-align:center\">h</td>\n<td style=\"text-align:right\">i</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><strong>公式</strong><br>待补充<br>![](<a href=\"http://latex.codecogs.com/gif.latex?\\prod(n_{i_y})+1\">http://latex.codecogs.com/gif.latex?\\prod(n_{i_y})+1</a>)<br>![](<a href=\"http://latex.codecogs.com/gif.latex?\\prod(n_{x}\">http://latex.codecogs.com/gif.latex?\\prod(n_{x}</a>) +1)<br><code>&lt;img src=&quot;http://latex.codecogs.com/gif.latex?\\prod(n_{i_x})+1&quot;&gt;</code><br>示例：<br><img src=\"http://latex.codecogs.com/gif.latex?\\prod(n_{i_y}\" alt=\"\">+1)<br><img src=\"http://latex.codecogs.com/gif.latex?\\prod(n_x\" alt=\"\">+1)<br><img src=\"http://latex.codecogs.com/gif.latex?\\prod(n_{i_x})+1\"></li>\n<li><strong>链接</strong><br>示例<a href=\"https://citronman.github.io/\">我的主页</a> : [我的主页](<a href=\"https://citronman.github.io/\">https://citronman.github.io/</a>)<br>引用 先定义 [ref_name]:url，然后在需要写入url的地方， 这样使用[锚文本][ref_name]，通常的ref_name一般用数字表示，这样显得专业<br>简写url：用尖括号包裹url<br>这样生成的url锚文本就是url本身</li>\n<li><strong>图片</strong><br>示例:<br>　<img src=\"/images/markdown_pic.jpg\" alt=\"alt_text\"><br>一行表示: <code>![alt_text](/images/markdown_pic.jpg)</code><br>引用表示法: ![alt_text][id],预先定义 [id]:url “可选title”<br>直接使用<img>标签，这样可以指定图片的大小尺寸</li>\n<li><strong>特殊符号</strong><br>用\\来转义，表示文本中的markdown符号<br>可以在文本种直接使用html标签，但是要注意在使用的时候，前后加上空行<br>文本前后各加一个符号，表示斜体</li>\n<li><strong>注释</strong><br>&lt;!--本行你应该假装看不见 --&gt;</li>\n<li><strong>内嵌HTML</strong><br><font color=red size=2 face=\"黑体\">&lt;\\font color=red size=2 face=”黑体”></font><br>换行：<code>&lt;br&gt;</code></li>\n</ul>\n<h1 id=\"进阶语法\"><a href=\"#进阶语法\" class=\"headerlink\" title=\"进阶语法\"></a>进阶语法</h1><ul>\n<li><p>1.设置图片大小，居中<br>方法一：使用支持图片大小更改操作的 Mou 编辑器<br>使用如下语法<br><code>![](./pic/pic1_50.png =100x100)</code><br>注意: =前有个空格，可以只写宽度。<br>方法二：嵌入HTML代码<br>使用img标签<br><code>&lt;img src=&quot;./xxx.png&quot; width = &quot;300&quot; height = &quot;200&quot; alt=&quot;图片名称&quot; align=center /&gt;</code><br>附：如果需要居中的话只要在外面包围div标签即可,但要注意在前后各<strong>留一行空白</strong>，否则会破坏格式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;div  align=<span class=\"string\">\"center\"</span>&gt;    </div><div class=\"line\">...</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>2.缩进控制<br>切换到全角字符，敲两下空格。</p>\n</li>\n<li><p>3.加入图标<br><i class=\"icon-list\"></i> 目录<i class=\"icon-list\"></i>：快速导航当前文稿的目录结构以跳转到感兴趣的段落<br><i class=\"icon-info\"></i> 视图：互换左边编辑区和右边预览区的位置<br><i class=\"icon-user\"></i> 主题：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">\"icon-list\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>4.复选框<br><strong>hexo 不支持！！！！</strong></p>\n</li>\n</ul>\n<h1 id=\"reference\"><a href=\"#reference\" class=\"headerlink\" title=\"reference\"></a>reference</h1><p>Hexo官网资料 ： <a href=\"https://hexo.io/docs/\">https://hexo.io/docs/</a><br>Hexo中文网站 ： <a href=\"http://wiki.jikexueyuan.com/project/hexo-document/\">http://wiki.jikexueyuan.com/project/hexo-document/</a><br>Zippera blog : <a href=\"http://wiki.jikexueyuan.com/project/hexo-document/\">http://wiki.jikexueyuan.com/project/hexo-document/</a><br>老蒋部落     ： <a href=\"http://www.itbulu.com/centos-git-nodejs-hexo.html\">http://www.itbulu.com/centos-git-nodejs-hexo.html</a><br>主题Yilia    : <a href=\"http://litten.github.io/2014/08/31/hexo-theme-yilia/\">http://litten.github.io/2014/08/31/hexo-theme-yilia/</a><br>Themes: <a href=\"https://github.com/hexojs/hexo/wiki/Themes#\">https://github.com/hexojs/hexo/wiki/Themes#</a><br>知乎郑宇：<a href=\"https://www.zhihu.com/question/23378396\">https://www.zhihu.com/question/23378396</a><br>在线markdown编辑器：<a href=\"https://www.zybuluo.com/mdeditor\">https://www.zybuluo.com/mdeditor</a></p>\n"},{"title":"心中有数，手中有牌","date":"2016-08-27T06:58:59.000Z","_content":"# <font color=green size=5>IMPORTANT</font>\n* RL+Attention+GRU  =>  THAENO\n\n# <font color=green size=5>Do It Every Day</font>\n* 天空之城\n* 连接组\n* 三体\n\n# <font color=green size=5>STACK</font>\n* NCE\n* RL+Attention+GRU  =>  BRAINMATRIX\n* LSTM              =>  BRAINMATRIX\n* Sequence Level Training\n\n\n\n","source":"_posts/Schedule.md","raw":"---\ntitle: 心中有数，手中有牌\ndate: 2016-08-27 14:58:59\ntags: life\n---\n# <font color=green size=5>IMPORTANT</font>\n* RL+Attention+GRU  =>  THAENO\n\n# <font color=green size=5>Do It Every Day</font>\n* 天空之城\n* 连接组\n* 三体\n\n# <font color=green size=5>STACK</font>\n* NCE\n* RL+Attention+GRU  =>  BRAINMATRIX\n* LSTM              =>  BRAINMATRIX\n* Sequence Level Training\n\n\n\n","slug":"Schedule","published":1,"updated":"2016-08-28T15:44:17.925Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisfi4lrb000blzjqb6h8bebj","content":"<h1 id=\"IMPORTANT\"><a href=\"#IMPORTANT\" class=\"headerlink\" title=\"IMPORTANT\"></a><font color=\"green\" size=\"5\">IMPORTANT</font></h1><ul>\n<li>RL+Attention+GRU  =&gt;  THAENO</li>\n</ul>\n<h1 id=\"Do-It-Every-Day\"><a href=\"#Do-It-Every-Day\" class=\"headerlink\" title=\"Do It Every Day\"></a><font color=\"green\" size=\"5\">Do It Every Day</font></h1><ul>\n<li>天空之城</li>\n<li>连接组</li>\n<li>三体</li>\n</ul>\n<h1 id=\"STACK\"><a href=\"#STACK\" class=\"headerlink\" title=\"STACK\"></a><font color=\"green\" size=\"5\">STACK</font></h1><ul>\n<li>NCE</li>\n<li>RL+Attention+GRU  =&gt;  BRAINMATRIX</li>\n<li>LSTM              =&gt;  BRAINMATRIX</li>\n<li>Sequence Level Training</li>\n</ul>\n","excerpt":"","more":"<h1 id=\"IMPORTANT\"><a href=\"#IMPORTANT\" class=\"headerlink\" title=\"IMPORTANT\"></a><font color=green size=5>IMPORTANT</font></h1><ul>\n<li>RL+Attention+GRU  =&gt;  THAENO</li>\n</ul>\n<h1 id=\"Do-It-Every-Day\"><a href=\"#Do-It-Every-Day\" class=\"headerlink\" title=\"Do It Every Day\"></a><font color=green size=5>Do It Every Day</font></h1><ul>\n<li>天空之城</li>\n<li>连接组</li>\n<li>三体</li>\n</ul>\n<h1 id=\"STACK\"><a href=\"#STACK\" class=\"headerlink\" title=\"STACK\"></a><font color=green size=5>STACK</font></h1><ul>\n<li>NCE</li>\n<li>RL+Attention+GRU  =&gt;  BRAINMATRIX</li>\n<li>LSTM              =&gt;  BRAINMATRIX</li>\n<li>Sequence Level Training</li>\n</ul>\n"},{"title":"Ubuntu Shell","date":"2016-08-22T01:58:41.000Z","_content":"\n* pwd:查看当前目录\n* lshw: 查看电脑硬件详细信息\n* lscpu:查看cpu\n* htop: 动态监控进程\n* nvidia-smi: 查看gpu\n* find . -name name*: 查找包含name的文件名\n* ssh-keygen:生成ssh 公钥\n\n","source":"_posts/Ubuntu-Shell.md","raw":"---\ntitle: Ubuntu Shell\ndate: 2016-08-22 09:58:41\ntags: work\n---\n\n* pwd:查看当前目录\n* lshw: 查看电脑硬件详细信息\n* lscpu:查看cpu\n* htop: 动态监控进程\n* nvidia-smi: 查看gpu\n* find . -name name*: 查找包含name的文件名\n* ssh-keygen:生成ssh 公钥\n\n","slug":"Ubuntu-Shell","published":1,"updated":"2016-08-29T02:35:44.517Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cisfi4lrd000elzjq1u7o3qlh","content":"<ul>\n<li>pwd:查看当前目录</li>\n<li>lshw: 查看电脑硬件详细信息</li>\n<li>lscpu:查看cpu</li>\n<li>htop: 动态监控进程</li>\n<li>nvidia-smi: 查看gpu</li>\n<li>find . -name name*: 查找包含name的文件名</li>\n<li>ssh-keygen:生成ssh 公钥</li>\n</ul>\n","excerpt":"","more":"<ul>\n<li>pwd:查看当前目录</li>\n<li>lshw: 查看电脑硬件详细信息</li>\n<li>lscpu:查看cpu</li>\n<li>htop: 动态监控进程</li>\n<li>nvidia-smi: 查看gpu</li>\n<li>find . -name name*: 查找包含name的文件名</li>\n<li>ssh-keygen:生成ssh 公钥</li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cisfi4lr40007lzjqyi52nvzx","tag_id":"cisfi4lqu0004lzjqei3ylxvd","_id":"cisfi4lrb000alzjq1s0lkh10"},{"post_id":"cisfi4lqj0000lzjqomq76q6q","tag_id":"cisfi4lqu0004lzjqei3ylxvd","_id":"cisfi4lrc000clzjqgsr9epea"},{"post_id":"cisfi4lr90009lzjqcauv2e6n","tag_id":"cisfi4lqu0004lzjqei3ylxvd","_id":"cisfi4lre000flzjqgbimg5ob"},{"post_id":"cisfi4lqq0002lzjqqmq6pii1","tag_id":"cisfi4lqu0004lzjqei3ylxvd","_id":"cisfi4lre000glzjqdvyfbvzo"},{"post_id":"cisfi4lrd000elzjq1u7o3qlh","tag_id":"cisfi4lqu0004lzjqei3ylxvd","_id":"cisfi4lre000ilzjqt262fc4g"},{"post_id":"cisfi4lqz0005lzjqsjfrtfs2","tag_id":"cisfi4lqu0004lzjqei3ylxvd","_id":"cisfi4lrf000jlzjq6ng37yuf"},{"post_id":"cisfi4lrb000blzjqb6h8bebj","tag_id":"cisfi4lre000hlzjq5yzovjzr","_id":"cisfi4lrf000klzjqlvvxyf4v"}],"Tag":[{"name":"work","_id":"cisfi4lqu0004lzjqei3ylxvd"},{"name":"life","_id":"cisfi4lre000hlzjq5yzovjzr"}]}}